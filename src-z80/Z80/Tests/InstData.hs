module Z80.Tests.InstData where

import Z80.Processor
import Z80.InstructionSet
import Machine

data InstTestCase where
  TC ::
    { instDescription :: String
    , instBytes :: [Z80byte]
    , instruction :: Z80instruction
    } -> InstTestCase

data InstTestGroup where
  TG ::
    { groupDescription :: String
    , testCases :: [InstTestCase]
    } -> InstTestGroup

testOrigin :: Z80addr
testOrigin = 0x5001

z80InstData :: [InstTestGroup]
z80InstData =
  [ TG "Regular instructions"
    [ TC "NOP                 " [0x00                        ] NOP
    , TC "LD BC,NN            " [0x01, 0x56, 0x78            ] (LD (Reg16Imm (RPair16 BC) (mkAbstractAddr 0x7856)))
    , TC "LD (BC),A           " [0x02                        ] (LD ToBCindirect)
    , TC "INC BC              " [0x03                        ] (INC (IncDecReg16 (RPair16 BC)))
    , TC "INC B               " [0x04                        ] (INC (IncDecReg8 B))
    , TC "DEC B               " [0x05                        ] (DEC (IncDecReg8 B))
    , TC "LD B,N              " [0x06, 0x9a                  ] (LD (Reg8Imm B 0x9a))
    , TC "RLCA                " [0x07                        ] RLCA
    , TC "EX AF,AF'           " [0x08                        ] (EXC AFAF')
    , TC "ADD HL,BC           " [0x09                        ] (ADD16 $ DestHL (RPair16 BC))
    , TC "LD A,(BC)           " [0x0A                        ] (LD FromBCindirect)
    , TC "DEC BC              " [0x0B                        ] (DEC (IncDecReg16 (RPair16 BC)))
    , TC "INC C               " [0x0C                        ] (INC (IncDecReg8 C))
    , TC "DEC C               " [0x0D                        ] (DEC (IncDecReg8 C))
    , TC "LD C,N              " [0x0E, 0xbc                  ] (LD (Reg8Imm C 0xbc))
    , TC "RRCA                " [0x0F                        ] RRCA
    , TC "DJNZ $-2            " [0x10, 0xfe                  ] (DJNZ (mkAbstractAddr testOrigin))
    , TC "LD DE,NN            " [0x11, 0xde, 0x0f            ] (LD (Reg16Imm (RPair16 DE) (mkAbstractAddr 0x0fde)))
    , TC "LD (DE),A           " [0x12                        ] (LD ToDEindirect)
    , TC "INC DE              " [0x13                        ] (INC (IncDecReg16 (RPair16 DE)))
    , TC "INC D               " [0x14                        ] (INC (IncDecReg8 D))
    , TC "DEC D               " [0x15                        ] (DEC (IncDecReg8 D))
    , TC "LD D,N              " [0x16, 0x12                  ] (LD (Reg8Imm D 0x12))
    , TC "RLA                 " [0x17                        ] RLA
    , TC "JR $-2              " [0x18, 0xfe                  ] (JR (mkAbstractAddr testOrigin))
    , TC "ADD HL,DE           " [0x19                        ] (ADD16 $ DestHL (RPair16 DE))
    , TC "LD A,(DE)           " [0x1A                        ] (LD FromDEindirect)
    , TC "DEC DE              " [0x1B                        ] (DEC (IncDecReg16 (RPair16 DE)))
    , TC "INC E               " [0x1C                        ] (INC (IncDecReg8 E))
    , TC "DEC E               " [0x1D                        ] (DEC (IncDecReg8 E))
    , TC "LD E,N              " [0x1E, 0x34                  ] (LD (Reg8Imm E 0x34))
    , TC "RRA                 " [0x1F                        ] RRA
    , TC "JR NZ,$-2           " [0x20, 0xfe                  ] (JRCC NZ (mkAbstractAddr testOrigin))
    , TC "LD HL,NN            " [0x21, 0x56, 0x78            ] (LD (Reg16Imm (RPair16 HL) (mkAbstractAddr 0x7856)))
    , TC "LD (NN),HL          " [0x22, 0x9a, 0xbc            ] (LD16 (FromReg16 (RPair16 HL) (mkAbstractAddr 0xbc9a)))
    , TC "INC HL              " [0x23                        ] (INC (IncDecReg16 (RPair16 HL)))
    , TC "INC H               " [0x24                        ] (INC (IncDecReg8 H))
    , TC "DEC H               " [0x25                        ] (DEC (IncDecReg8 H))
    , TC "LD H,N              " [0x26, 0xde                  ] (LD (Reg8Imm H 0xde))
    , TC "DAA                 " [0x27                        ] DAA
    , TC "JR Z,$-2            " [0x28, 0xfe                  ] (JRCC Z (mkAbstractAddr testOrigin))
    , TC "ADD HL,HL           " [0x29                        ] (ADD16 $ DestHL (RPair16 HL))
    , TC "LD HL,(NN)          " [0x2A, 0x0f, 0x12            ] (LD16 (ToReg16 (RPair16 HL) (mkAbstractAddr 0x120f)))
    , TC "DEC HL              " [0x2B                        ] (DEC (IncDecReg16 (RPair16 HL)))
    , TC "INC L               " [0x2C                        ] (INC (IncDecReg8 L))
    , TC "DEC L               " [0x2D                        ] (DEC (IncDecReg8 L))
    , TC "LD L,N              " [0x2E, 0x34                  ] (LD (Reg8Imm L 0x34))
    , TC "CPL                 " [0x2F                        ] CPL
    , TC "JR NC,$-2           " [0x30, 0xfe                  ] (JRCC NC (mkAbstractAddr testOrigin))
    , TC "LD SP,NN            " [0x31, 0x56, 0x78            ] (LD (Reg16Imm SP (mkAbstractAddr 0x7856)))
    , TC "LD (NN),A           " [0x32, 0x9a, 0xbc            ] (LD (AccToMem (mkAbstractAddr 0xbc9a)))
    , TC "INC SP              " [0x33                        ] (INC (IncDecReg16 SP))
    , TC "INC (HL)            " [0x34                        ] (INC (IncDecReg8 HLindirect))
    , TC "DEC (HL)            " [0x35                        ] (DEC (IncDecReg8 HLindirect))
    , TC "LD (HL),N           " [0x36, 0xde                  ] (LD (Reg8Imm HLindirect 0xde))
    , TC "SCF                 " [0x37                        ] SCF
    , TC "JR C,$-2            " [0x38, 0xfe                  ] (JRCC CY (mkAbstractAddr testOrigin))
    , TC "ADD HL,SP           " [0x39                        ] (ADD16 $ DestHL SP)
    , TC "LD A,(NN)           " [0x3A, 0x0f, 0x12            ] (LD (AccFromMem (mkAbstractAddr 0x120f)))
    , TC "DEC SP              " [0x3B                        ] (DEC (IncDecReg16 SP))
    , TC "INC A               " [0x3C                        ] (INC (IncDecReg8 A))
    , TC "DEC A               " [0x3D                        ] (DEC (IncDecReg8 A))
    , TC "LD A,N              " [0x3E, 0x34                  ] (LD (Reg8Imm A 0x34))
    , TC "CCF                 " [0x3F                        ] CCF
    , TC "LD B,B              " [0x40                        ] (LD (Reg8Reg8 B B))
    , TC "LD B,C              " [0x41                        ] (LD (Reg8Reg8 B C))
    , TC "LD B,D              " [0x42                        ] (LD (Reg8Reg8 B D))
    , TC "LD B,E              " [0x43                        ] (LD (Reg8Reg8 B E))
    , TC "LD B,H              " [0x44                        ] (LD (Reg8Reg8 B H))
    , TC "LD B,L              " [0x45                        ] (LD (Reg8Reg8 B L))
    , TC "LD B,(HL)           " [0x46                        ] (LD (Reg8Reg8 B HLindirect))
    , TC "LD B,A              " [0x47                        ] (LD (Reg8Reg8 B A))
    , TC "LD C,B              " [0x48                        ] (LD (Reg8Reg8 C B))
    , TC "LD C,C              " [0x49                        ] (LD (Reg8Reg8 C C))
    , TC "LD C,D              " [0x4A                        ] (LD (Reg8Reg8 C D))
    , TC "LD C,E              " [0x4B                        ] (LD (Reg8Reg8 C E))
    , TC "LD C,H              " [0x4C                        ] (LD (Reg8Reg8 C H))
    , TC "LD C,L              " [0x4D                        ] (LD (Reg8Reg8 C L))
    , TC "LD C,(HL)           " [0x4E                        ] (LD (Reg8Reg8 C HLindirect))
    , TC "LD C,A              " [0x4F                        ] (LD (Reg8Reg8 C A))
    , TC "LD D,B              " [0x50                        ] (LD (Reg8Reg8 D B))
    , TC "LD D,C              " [0x51                        ] (LD (Reg8Reg8 D C))
    , TC "LD D,D              " [0x52                        ] (LD (Reg8Reg8 D D))
    , TC "LD D,E              " [0x53                        ] (LD (Reg8Reg8 D E))
    , TC "LD D,H              " [0x54                        ] (LD (Reg8Reg8 D H))
    , TC "LD D,L              " [0x55                        ] (LD (Reg8Reg8 D L))
    , TC "LD D,(HL)           " [0x56                        ] (LD (Reg8Reg8 D HLindirect))
    , TC "LD D,A              " [0x57                        ] (LD (Reg8Reg8 D A))
    , TC "LD E,B              " [0x58                        ] (LD (Reg8Reg8 E B))
    , TC "LD E,C              " [0x59                        ] (LD (Reg8Reg8 E C))
    , TC "LD E,D              " [0x5A                        ] (LD (Reg8Reg8 E D))
    , TC "LD E,E              " [0x5B                        ] (LD (Reg8Reg8 E E))
    , TC "LD E,H              " [0x5C                        ] (LD (Reg8Reg8 E H))
    , TC "LD E,L              " [0x5D                        ] (LD (Reg8Reg8 E L))
    , TC "LD E,(HL)           " [0x5E                        ] (LD (Reg8Reg8 E HLindirect))
    , TC "LD E,A              " [0x5F                        ] (LD (Reg8Reg8 E A))
    , TC "LD H,B              " [0x60                        ] (LD (Reg8Reg8 H B))
    , TC "LD H,C              " [0x61                        ] (LD (Reg8Reg8 H C))
    , TC "LD H,D              " [0x62                        ] (LD (Reg8Reg8 H D))
    , TC "LD H,E              " [0x63                        ] (LD (Reg8Reg8 H E))
    , TC "LD H,H              " [0x64                        ] (LD (Reg8Reg8 H H))
    , TC "LD H,L              " [0x65                        ] (LD (Reg8Reg8 H L))
    , TC "LD H,(HL)           " [0x66                        ] (LD (Reg8Reg8 H HLindirect))
    , TC "LD H,A              " [0x67                        ] (LD (Reg8Reg8 H A))
    , TC "LD L,B              " [0x68                        ] (LD (Reg8Reg8 L B))
    , TC "LD L,C              " [0x69                        ] (LD (Reg8Reg8 L C))
    , TC "LD L,D              " [0x6A                        ] (LD (Reg8Reg8 L D))
    , TC "LD L,E              " [0x6B                        ] (LD (Reg8Reg8 L E))
    , TC "LD L,H              " [0x6C                        ] (LD (Reg8Reg8 L H))
    , TC "LD L,L              " [0x6D                        ] (LD (Reg8Reg8 L L))
    , TC "LD L,(HL)           " [0x6E                        ] (LD (Reg8Reg8 L HLindirect))
    , TC "LD L,A              " [0x6F                        ] (LD (Reg8Reg8 L A))
    , TC "LD (HL),B           " [0x70                        ] (LD (Reg8Reg8 HLindirect B))
    , TC "LD (HL),C           " [0x71                        ] (LD (Reg8Reg8 HLindirect C))
    , TC "LD (HL),D           " [0x72                        ] (LD (Reg8Reg8 HLindirect D))
    , TC "LD (HL),E           " [0x73                        ] (LD (Reg8Reg8 HLindirect E))
    , TC "LD (HL),H           " [0x74                        ] (LD (Reg8Reg8 HLindirect H))
    , TC "LD (HL),L           " [0x75                        ] (LD (Reg8Reg8 HLindirect L))
    , TC "HALT                " [0x76                        ] HALT
    , TC "LD (HL),A           " [0x77                        ] (LD (Reg8Reg8 HLindirect A))
    , TC "LD A,B              " [0x78                        ] (LD (Reg8Reg8 A B))
    , TC "LD A,C              " [0x79                        ] (LD (Reg8Reg8 A C))
    , TC "LD A,D              " [0x7A                        ] (LD (Reg8Reg8 A D))
    , TC "LD A,E              " [0x7B                        ] (LD (Reg8Reg8 A E))
    , TC "LD A,H              " [0x7C                        ] (LD (Reg8Reg8 A H))
    , TC "LD A,L              " [0x7D                        ] (LD (Reg8Reg8 A L))
    , TC "LD A,(HL)           " [0x7E                        ] (LD (Reg8Reg8 A HLindirect))
    , TC "LD A,A              " [0x7F                        ] (LD (Reg8Reg8 A A))
    , TC "ADD A,B             " [0x80                        ] (ADD (ALUreg8 B))
    , TC "ADD A,C             " [0x81                        ] (ADD (ALUreg8 C))
    , TC "ADD A,D             " [0x82                        ] (ADD (ALUreg8 D))
    , TC "ADD A,E             " [0x83                        ] (ADD (ALUreg8 E))
    , TC "ADD A,H             " [0x84                        ] (ADD (ALUreg8 H))
    , TC "ADD A,L             " [0x85                        ] (ADD (ALUreg8 L))
    , TC "ADD A,(HL)          " [0x86                        ] (ADD (ALUreg8 HLindirect))
    , TC "ADD A,A             " [0x87                        ] (ADD (ALUreg8 A))
    , TC "ADC A,B             " [0x88                        ] (ADC (ALUreg8 B))
    , TC "ADC A,C             " [0x89                        ] (ADC (ALUreg8 C))
    , TC "ADC A,D             " [0x8A                        ] (ADC (ALUreg8 D))
    , TC "ADC A,E             " [0x8B                        ] (ADC (ALUreg8 E))
    , TC "ADC A,H             " [0x8C                        ] (ADC (ALUreg8 H))
    , TC "ADC A,L             " [0x8D                        ] (ADC (ALUreg8 L))
    , TC "ADC A,(HL)          " [0x8E                        ] (ADC (ALUreg8 HLindirect))
    , TC "ADC A,A             " [0x8F                        ] (ADC (ALUreg8 A))
    , TC "SUB B               " [0x90                        ] (SUB (ALUreg8 B))
    , TC "SUB C               " [0x91                        ] (SUB (ALUreg8 C))
    , TC "SUB D               " [0x92                        ] (SUB (ALUreg8 D))
    , TC "SUB E               " [0x93                        ] (SUB (ALUreg8 E))
    , TC "SUB H               " [0x94                        ] (SUB (ALUreg8 H))
    , TC "SUB L               " [0x95                        ] (SUB (ALUreg8 L))
    , TC "SUB (HL)            " [0x96                        ] (SUB (ALUreg8 HLindirect))
    , TC "SUB A               " [0x97                        ] (SUB (ALUreg8 A))
    , TC "SBC B               " [0x98                        ] (SBC (ALUreg8 B))
    , TC "SBC C               " [0x99                        ] (SBC (ALUreg8 C))
    , TC "SBC D               " [0x9A                        ] (SBC (ALUreg8 D))
    , TC "SBC E               " [0x9B                        ] (SBC (ALUreg8 E))
    , TC "SBC H               " [0x9C                        ] (SBC (ALUreg8 H))
    , TC "SBC L               " [0x9D                        ] (SBC (ALUreg8 L))
    , TC "SBC (HL)            " [0x9E                        ] (SBC (ALUreg8 HLindirect))
    , TC "SBC A               " [0x9F                        ] (SBC (ALUreg8 A))
    , TC "AND B               " [0xA0                        ] (AND (ALUreg8 B))
    , TC "AND C               " [0xA1                        ] (AND (ALUreg8 C))
    , TC "AND D               " [0xA2                        ] (AND (ALUreg8 D))
    , TC "AND E               " [0xA3                        ] (AND (ALUreg8 E))
    , TC "AND H               " [0xA4                        ] (AND (ALUreg8 H))
    , TC "AND L               " [0xA5                        ] (AND (ALUreg8 L))
    , TC "AND (HL)            " [0xA6                        ] (AND (ALUreg8 HLindirect))
    , TC "AND A               " [0xA7                        ] (AND (ALUreg8 A))
    , TC "XOR B               " [0xA8                        ] (XOR (ALUreg8 B))
    , TC "XOR C               " [0xA9                        ] (XOR (ALUreg8 C))
    , TC "XOR D               " [0xAA                        ] (XOR (ALUreg8 D))
    , TC "XOR E               " [0xAB                        ] (XOR (ALUreg8 E))
    , TC "XOR H               " [0xAC                        ] (XOR (ALUreg8 H))
    , TC "XOR L               " [0xAD                        ] (XOR (ALUreg8 L))
    , TC "XOR (HL)            " [0xAE                        ] (XOR (ALUreg8 HLindirect))
    , TC "XOR A               " [0xAF                        ] (XOR (ALUreg8 A))
    , TC "OR B                " [0xB0                        ] (OR (ALUreg8 B))
    , TC "OR C                " [0xB1                        ] (OR (ALUreg8 C))
    , TC "OR D                " [0xB2                        ] (OR (ALUreg8 D))
    , TC "OR E                " [0xB3                        ] (OR (ALUreg8 E))
    , TC "OR H                " [0xB4                        ] (OR (ALUreg8 H))
    , TC "OR L                " [0xB5                        ] (OR (ALUreg8 L))
    , TC "OR (HL)             " [0xB6                        ] (OR (ALUreg8 HLindirect))
    , TC "OR A                " [0xB7                        ] (OR (ALUreg8 A))
    , TC "CP B                " [0xB8                        ] (CP (ALUreg8 B))
    , TC "CP C                " [0xB9                        ] (CP (ALUreg8 C))
    , TC "CP D                " [0xBA                        ] (CP (ALUreg8 D))
    , TC "CP E                " [0xBB                        ] (CP (ALUreg8 E))
    , TC "CP H                " [0xBC                        ] (CP (ALUreg8 H))
    , TC "CP L                " [0xBD                        ] (CP (ALUreg8 L))
    , TC "CP (HL)             " [0xBE                        ] (CP (ALUreg8 HLindirect))
    , TC "CP A                " [0xBF                        ] (CP (ALUreg8 A))
    , TC "RET NZ              " [0xC0                        ] (RETCC NZ)
    , TC "POP BC              " [0xC1                        ] (POP (AFPair16 BC))
    , TC "JP NZ,$+3           " [0xC2, 0x78, 0x56            ] (JPCC NZ (mkAbstractAddr 0x5678))
    , TC "JP $+3              " [0xC3, 0x34, 0x12            ] (JP (mkAbstractAddr 0x1234))
    , TC "CALL NZ,NN          " [0xC4, 0x56, 0x78            ] (CALLCC NZ (mkAbstractAddr 0x7856))
    , TC "PUSH BC             " [0xC5                        ] (PUSH (AFPair16 BC))
    , TC "ADD A,N             " [0xC6, 0x9a                  ] (ADD (ALUimm 0x9a))
    , TC "RST 0               " [0xC7                        ] (RST 0)
    , TC "RET Z               " [0xC8                        ] (RETCC Z)
    , TC "RET                 " [0xC9                        ] RET
    , TC "JP Z,$+3            " [0xCA, 0xbb, 0xaa            ] (JPCC Z (mkAbstractAddr 0xaabb))
    , TC "CALL Z,NN           " [0xCC, 0x56, 0x78            ] (CALLCC Z (mkAbstractAddr 0x7856))
    , TC "CALL NN             " [0xCD, 0x9a, 0xbc            ] (CALL (mkAbstractAddr 0xbc9a))
    , TC "ADC A,N             " [0xCE, 0xde                  ] (ADC (ALUimm 0xde))
    , TC "RST 8H              " [0xCF                        ] (RST 8)
    , TC "RET NC              " [0xD0                        ] (RETCC NC)
    , TC "POP DE              " [0xD1                        ] (POP (AFPair16 DE))
    , TC "JP NC,$+3           " [0xD2, 0xdd, 0xcc            ] (JPCC NC  (mkAbstractAddr 0xccdd))
    , TC "OUT (N),A           " [0xD3, 0x0f                  ] (OUT (PortImm 0x0f))
    , TC "CALL NC,NN          " [0xD4, 0x12, 0x34            ] (CALLCC NC (mkAbstractAddr 0x3412))
    , TC "PUSH DE             " [0xD5                        ] (PUSH (AFPair16 DE))
    , TC "SUB N               " [0xD6, 0x9a                  ] (SUB (ALUimm 0x9a))
    , TC "RST 10H             " [0xD7                        ] (RST 0x10)
    , TC "RET C               " [0xD8                        ] (RETCC CY)
    , TC "EXX                 " [0xD9                        ] (EXC Primes)
    , TC "JP C,$+3            " [0xDA, 0x54, 0xa4            ] (JPCC CY (mkAbstractAddr 0xa454))
    , TC "IN A,(N)            " [0xDB, 0xbc                  ] (IN (PortImm 0xbc))
    , TC "CALL C,NN           " [0xDC, 0xde, 0x0f            ] (CALLCC CY (mkAbstractAddr 0x0fde))
    , TC "SBC A,N             " [0xDE, 0x56                  ] (SBC (ALUimm 0x56))
    , TC "RST 18H             " [0xDF                        ] (RST 0x18)
    , TC "RET PO              " [0xE0                        ] (RETCC PO)
    , TC "POP HL              " [0xE1                        ] (POP (AFPair16 HL))
    , TC "JP PO,$+3           " [0xE2, 0x03, 0x61            ] (JPCC PO (mkAbstractAddr 0x6103))
    , TC "EX (SP),HL          " [0xE3                        ] (EXC SPHL)
    , TC "CALL PO,NN          " [0xE4, 0x78, 0x9a            ] (CALLCC PO (mkAbstractAddr 0x9a78))
    , TC "PUSH HL             " [0xE5                        ] (PUSH (AFPair16 HL))
    , TC "AND N               " [0xE6, 0xbc                  ] (AND (ALUimm 0xbc))
    , TC "RST 20H             " [0xE7                        ] (RST 0x20)
    , TC "RET PE              " [0xE8                        ] (RETCC PE)
    , TC "JP (HL)             " [0xE9                        ] JPHL
    , TC "JP PE,$+3           " [0xEA, 0x35, 0x9f            ] (JPCC PE (mkAbstractAddr 0x9f35))
    , TC "EX DE,HL            " [0xEB                        ] (EXC DEHL)
    , TC "CALL PE,NN          " [0xEC, 0xde, 0x0f            ] (CALLCC PE (mkAbstractAddr 0x0fde))
    , TC "XOR N               " [0xEE, 0x12                  ] (XOR (ALUimm 0x12))
    , TC "RST 28H             " [0xEF                        ] (RST 0x28)
    , TC "RET P               " [0xF0                        ] (RETCC POS)
    , TC "POP AF              " [0xF1                        ] (POP AF)
    , TC "JP P,$+3            " [0xF2, 0xcd, 0xab            ] (JPCC POS (mkAbstractAddr 0xabcd))
    , TC "DI                  " [0xF3                        ] DI
    , TC "CALL P,NN           " [0xF4, 0x34, 0x56            ] (CALLCC POS (mkAbstractAddr 0x5634))
    , TC "PUSH AF             " [0xF5                        ] (PUSH AF)
    , TC "OR N                " [0xF6, 0x78                  ] (OR (ALUimm 0x78))
    , TC "RST 30H             " [0xF7                        ] (RST 0x30)
    , TC "RET M               " [0xF8                        ] (RETCC MI)
    , TC "LD SP,HL            " [0xF9                        ] LDSPHL
    , TC "JP M,$+3            " [0xFA, 0x44, 0x99            ] (JPCC MI (mkAbstractAddr 0x9944))
    , TC "EI                  " [0xFB                        ] EI
    , TC "CALL M,NN           " [0xFC, 0x9a, 0xbc            ] (CALLCC MI (mkAbstractAddr 0xbc9a))
    , TC "CP N                " [0xFE, 0xde                  ] (CP (ALUimm 0xde))
    , TC "RST 38H             " [0xFF                        ] (RST 0x38)
    ]
  , TG "0xcb prefix (RLC/RL/RR/SLA/SRA/SLL/SRL/BIT/SET/RESET instructions)"
    [ TC "RLC B               " [0xCB, 0x00                  ] (RLC B)
    , TC "RLC C               " [0xCB, 0x01                  ] (RLC C)
    , TC "RLC D               " [0xCB, 0x02                  ] (RLC D)
    , TC "RLC E               " [0xCB, 0x03                  ] (RLC E)
    , TC "RLC H               " [0xCB, 0x04                  ] (RLC H)
    , TC "RLC L               " [0xCB, 0x05                  ] (RLC L)
    , TC "RLC (HL)            " [0xCB, 0x06                  ] (RLC HLindirect)
    , TC "RLC A               " [0xCB, 0x07                  ] (RLC A)
    , TC "RRC B               " [0xCB, 0x08                  ] (RRC B)
    , TC "RRC C               " [0xCB, 0x09                  ] (RRC C)
    , TC "RRC D               " [0xCB, 0x0A                  ] (RRC D)
    , TC "RRC E               " [0xCB, 0x0B                  ] (RRC E)
    , TC "RRC H               " [0xCB, 0x0C                  ] (RRC H)
    , TC "RRC L               " [0xCB, 0x0D                  ] (RRC L)
    , TC "RRC (HL)            " [0xCB, 0x0E                  ] (RRC HLindirect)
    , TC "RRC A               " [0xCB, 0x0F                  ] (RRC A)
    , TC "RL  B               " [0xCB, 0x10                  ] (RL  B)
    , TC "RL  C               " [0xCB, 0x11                  ] (RL  C)
    , TC "RL  D               " [0xCB, 0x12                  ] (RL  D)
    , TC "RL  E               " [0xCB, 0x13                  ] (RL  E)
    , TC "RL  H               " [0xCB, 0x14                  ] (RL  H)
    , TC "RL  L               " [0xCB, 0x15                  ] (RL  L)
    , TC "RL  (HL)            " [0xCB, 0x16                  ] (RL  HLindirect)
    , TC "RL  A               " [0xCB, 0x17                  ] (RL  A)
    , TC "RR  B               " [0xCB, 0x18                  ] (RR  B)
    , TC "RR  C               " [0xCB, 0x19                  ] (RR  C)
    , TC "RR  D               " [0xCB, 0x1A                  ] (RR  D)
    , TC "RR  E               " [0xCB, 0x1B                  ] (RR  E)
    , TC "RR  H               " [0xCB, 0x1C                  ] (RR  H)
    , TC "RR  L               " [0xCB, 0x1D                  ] (RR  L)
    , TC "RR  (HL)            " [0xCB, 0x1E                  ] (RR  HLindirect)
    , TC "RR  A               " [0xCB, 0x1F                  ] (RR  A)
    , TC "SLA B               " [0xCB, 0x20                  ] (SLA B)
    , TC "SLA C               " [0xCB, 0x21                  ] (SLA C)
    , TC "SLA D               " [0xCB, 0x22                  ] (SLA D)
    , TC "SLA E               " [0xCB, 0x23                  ] (SLA E)
    , TC "SLA H               " [0xCB, 0x24                  ] (SLA H)
    , TC "SLA L               " [0xCB, 0x25                  ] (SLA L)
    , TC "SLA (HL)            " [0xCB, 0x26                  ] (SLA HLindirect)
    , TC "SLA A               " [0xCB, 0x27                  ] (SLA A)
    , TC "SRA B               " [0xCB, 0x28                  ] (SRA B)
    , TC "SRA C               " [0xCB, 0x29                  ] (SRA C)
    , TC "SRA D               " [0xCB, 0x2A                  ] (SRA D)
    , TC "SRA E               " [0xCB, 0x2B                  ] (SRA E)
    , TC "SRA H               " [0xCB, 0x2C                  ] (SRA H)
    , TC "SRA L               " [0xCB, 0x2D                  ] (SRA L)
    , TC "SRA (HL)            " [0xCB, 0x2E                  ] (SRA HLindirect)
    , TC "SRA A               " [0xCB, 0x2F                  ] (SRA A)
    , TC "SLL B               " [0xCB, 0x30                  ] (SLL B)
    , TC "SLL C               " [0xCB, 0x31                  ] (SLL C)
    , TC "SLL D               " [0xCB, 0x32                  ] (SLL D)
    , TC "SLL E               " [0xCB, 0x33                  ] (SLL E)
    , TC "SLL H               " [0xCB, 0x34                  ] (SLL H)
    , TC "SLL L               " [0xCB, 0x35                  ] (SLL L)
    , TC "SLL (HL)            " [0xCB, 0x36                  ] (SLL HLindirect)
    , TC "SLL A               " [0xCB, 0x37                  ] (SLL A)
    , TC "SRL B               " [0xCB, 0x38                  ] (SRL B)
    , TC "SRL C               " [0xCB, 0x39                  ] (SRL C)
    , TC "SRL D               " [0xCB, 0x3A                  ] (SRL D)
    , TC "SRL E               " [0xCB, 0x3B                  ] (SRL E)
    , TC "SRL H               " [0xCB, 0x3C                  ] (SRL H)
    , TC "SRL L               " [0xCB, 0x3D                  ] (SRL L)
    , TC "SRL (HL)            " [0xCB, 0x3E                  ] (SRL HLindirect)
    , TC "SRL A               " [0xCB, 0x3F                  ] (SRL A)
    , TC "BIT 0,B             " [0xCB, 0x40                  ] (BIT 0 B)
    , TC "BIT 0,C             " [0xCB, 0x41                  ] (BIT 0 C)
    , TC "BIT 0,D             " [0xCB, 0x42                  ] (BIT 0 D)
    , TC "BIT 0,E             " [0xCB, 0x43                  ] (BIT 0 E)
    , TC "BIT 0,H             " [0xCB, 0x44                  ] (BIT 0 H)
    , TC "BIT 0,L             " [0xCB, 0x45                  ] (BIT 0 L)
    , TC "BIT 0,(HL)          " [0xCB, 0x46                  ] (BIT 0 HLindirect)
    , TC "BIT 0,A             " [0xCB, 0x47                  ] (BIT 0 A)
    , TC "BIT 1,B             " [0xCB, 0x48                  ] (BIT 1 B)
    , TC "BIT 1,C             " [0xCB, 0x49                  ] (BIT 1 C)
    , TC "BIT 1,D             " [0xCB, 0x4A                  ] (BIT 1 D)
    , TC "BIT 1,E             " [0xCB, 0x4B                  ] (BIT 1 E)
    , TC "BIT 1,H             " [0xCB, 0x4C                  ] (BIT 1 H)
    , TC "BIT 1,L             " [0xCB, 0x4D                  ] (BIT 1 L)
    , TC "BIT 1,(HL)          " [0xCB, 0x4E                  ] (BIT 1 HLindirect)
    , TC "BIT 1,A             " [0xCB, 0x4F                  ] (BIT 1 A)
    , TC "BIT 2,B             " [0xCB, 0x50                  ] (BIT 2 B)
    , TC "BIT 2,C             " [0xCB, 0x51                  ] (BIT 2 C)
    , TC "BIT 2,D             " [0xCB, 0x52                  ] (BIT 2 D)
    , TC "BIT 2,E             " [0xCB, 0x53                  ] (BIT 2 E)
    , TC "BIT 2,H             " [0xCB, 0x54                  ] (BIT 2 H)
    , TC "BIT 2,L             " [0xCB, 0x55                  ] (BIT 2 L)
    , TC "BIT 2,(HL)          " [0xCB, 0x56                  ] (BIT 2 HLindirect)
    , TC "BIT 2,A             " [0xCB, 0x57                  ] (BIT 2 A)
    , TC "BIT 3,B             " [0xCB, 0x58                  ] (BIT 3 B)
    , TC "BIT 3,C             " [0xCB, 0x59                  ] (BIT 3 C)
    , TC "BIT 3,D             " [0xCB, 0x5A                  ] (BIT 3 D)
    , TC "BIT 3,E             " [0xCB, 0x5B                  ] (BIT 3 E)
    , TC "BIT 3,H             " [0xCB, 0x5C                  ] (BIT 3 H)
    , TC "BIT 3,L             " [0xCB, 0x5D                  ] (BIT 3 L)
    , TC "BIT 3,(HL)          " [0xCB, 0x5E                  ] (BIT 3 HLindirect)
    , TC "BIT 3,A             " [0xCB, 0x5F                  ] (BIT 3 A)
    , TC "BIT 4,B             " [0xCB, 0x60                  ] (BIT 4 B)
    , TC "BIT 4,C             " [0xCB, 0x61                  ] (BIT 4 C)
    , TC "BIT 4,D             " [0xCB, 0x62                  ] (BIT 4 D)
    , TC "BIT 4,E             " [0xCB, 0x63                  ] (BIT 4 E)
    , TC "BIT 4,H             " [0xCB, 0x64                  ] (BIT 4 H)
    , TC "BIT 4,L             " [0xCB, 0x65                  ] (BIT 4 L)
    , TC "BIT 4,(HL)          " [0xCB, 0x66                  ] (BIT 4 HLindirect)
    , TC "BIT 4,A             " [0xCB, 0x67                  ] (BIT 4 A)
    , TC "BIT 5,B             " [0xCB, 0x68                  ] (BIT 5 B)
    , TC "BIT 5,C             " [0xCB, 0x69                  ] (BIT 5 C)
    , TC "BIT 5,D             " [0xCB, 0x6A                  ] (BIT 5 D)
    , TC "BIT 5,E             " [0xCB, 0x6B                  ] (BIT 5 E)
    , TC "BIT 5,H             " [0xCB, 0x6C                  ] (BIT 5 H)
    , TC "BIT 5,L             " [0xCB, 0x6D                  ] (BIT 5 L)
    , TC "BIT 5,(HL)          " [0xCB, 0x6E                  ] (BIT 5 HLindirect)
    , TC "BIT 5,A             " [0xCB, 0x6F                  ] (BIT 5 A)
    , TC "BIT 6,B             " [0xCB, 0x70                  ] (BIT 6 B)
    , TC "BIT 6,C             " [0xCB, 0x71                  ] (BIT 6 C)
    , TC "BIT 6,D             " [0xCB, 0x72                  ] (BIT 6 D)
    , TC "BIT 6,E             " [0xCB, 0x73                  ] (BIT 6 E)
    , TC "BIT 6,H             " [0xCB, 0x74                  ] (BIT 6 H)
    , TC "BIT 6,L             " [0xCB, 0x75                  ] (BIT 6 L)
    , TC "BIT 6,(HL)          " [0xCB, 0x76                  ] (BIT 6 HLindirect)
    , TC "BIT 6,A             " [0xCB, 0x77                  ] (BIT 6 A)
    , TC "BIT 7,B             " [0xCB, 0x78                  ] (BIT 7 B)
    , TC "BIT 7,C             " [0xCB, 0x79                  ] (BIT 7 C)
    , TC "BIT 7,D             " [0xCB, 0x7A                  ] (BIT 7 D)
    , TC "BIT 7,E             " [0xCB, 0x7B                  ] (BIT 7 E)
    , TC "BIT 7,H             " [0xCB, 0x7C                  ] (BIT 7 H)
    , TC "BIT 7,L             " [0xCB, 0x7D                  ] (BIT 7 L)
    , TC "BIT 7,(HL)          " [0xCB, 0x7E                  ] (BIT 7 HLindirect)
    , TC "BIT 7,A             " [0xCB, 0x7F                  ] (BIT 7 A)
    , TC "RES 0,B             " [0xCB, 0x80                  ] (RES 0 B)
    , TC "RES 0,C             " [0xCB, 0x81                  ] (RES 0 C)
    , TC "RES 0,D             " [0xCB, 0x82                  ] (RES 0 D)
    , TC "RES 0,E             " [0xCB, 0x83                  ] (RES 0 E)
    , TC "RES 0,H             " [0xCB, 0x84                  ] (RES 0 H)
    , TC "RES 0,L             " [0xCB, 0x85                  ] (RES 0 L)
    , TC "RES 0,(HL)          " [0xCB, 0x86                  ] (RES 0 HLindirect)
    , TC "RES 0,A             " [0xCB, 0x87                  ] (RES 0 A)
    , TC "RES 1,B             " [0xCB, 0x88                  ] (RES 1 B)
    , TC "RES 1,C             " [0xCB, 0x89                  ] (RES 1 C)
    , TC "RES 1,D             " [0xCB, 0x8A                  ] (RES 1 D)
    , TC "RES 1,E             " [0xCB, 0x8B                  ] (RES 1 E)
    , TC "RES 1,H             " [0xCB, 0x8C                  ] (RES 1 H)
    , TC "RES 1,L             " [0xCB, 0x8D                  ] (RES 1 L)
    , TC "RES 1,(HL)          " [0xCB, 0x8E                  ] (RES 1 HLindirect)
    , TC "RES 1,A             " [0xCB, 0x8F                  ] (RES 1 A)
    , TC "RES 2,B             " [0xCB, 0x90                  ] (RES 2 B)
    , TC "RES 2,C             " [0xCB, 0x91                  ] (RES 2 C)
    , TC "RES 2,D             " [0xCB, 0x92                  ] (RES 2 D)
    , TC "RES 2,E             " [0xCB, 0x93                  ] (RES 2 E)
    , TC "RES 2,H             " [0xCB, 0x94                  ] (RES 2 H)
    , TC "RES 2,L             " [0xCB, 0x95                  ] (RES 2 L)
    , TC "RES 2,(HL)          " [0xCB, 0x96                  ] (RES 2 HLindirect)
    , TC "RES 2,A             " [0xCB, 0x97                  ] (RES 2 A)
    , TC "RES 3,B             " [0xCB, 0x98                  ] (RES 3 B)
    , TC "RES 3,C             " [0xCB, 0x99                  ] (RES 3 C)
    , TC "RES 3,D             " [0xCB, 0x9A                  ] (RES 3 D)
    , TC "RES 3,E             " [0xCB, 0x9B                  ] (RES 3 E)
    , TC "RES 3,H             " [0xCB, 0x9C                  ] (RES 3 H)
    , TC "RES 3,L             " [0xCB, 0x9D                  ] (RES 3 L)
    , TC "RES 3,(HL)          " [0xCB, 0x9E                  ] (RES 3 HLindirect)
    , TC "RES 3,A             " [0xCB, 0x9F                  ] (RES 3 A)
    , TC "RES 4,B             " [0xCB, 0xA0                  ] (RES 4 B)
    , TC "RES 4,C             " [0xCB, 0xA1                  ] (RES 4 C)
    , TC "RES 4,D             " [0xCB, 0xA2                  ] (RES 4 D)
    , TC "RES 4,E             " [0xCB, 0xA3                  ] (RES 4 E)
    , TC "RES 4,H             " [0xCB, 0xA4                  ] (RES 4 H)
    , TC "RES 4,L             " [0xCB, 0xA5                  ] (RES 4 L)
    , TC "RES 4,(HL)          " [0xCB, 0xA6                  ] (RES 4 HLindirect)
    , TC "RES 4,A             " [0xCB, 0xA7                  ] (RES 4 A)
    , TC "RES 5,B             " [0xCB, 0xA8                  ] (RES 5 B)
    , TC "RES 5,C             " [0xCB, 0xA9                  ] (RES 5 C)
    , TC "RES 5,D             " [0xCB, 0xAA                  ] (RES 5 D)
    , TC "RES 5,E             " [0xCB, 0xAB                  ] (RES 5 E)
    , TC "RES 5,H             " [0xCB, 0xAC                  ] (RES 5 H)
    , TC "RES 5,L             " [0xCB, 0xAD                  ] (RES 5 L)
    , TC "RES 5,(HL)          " [0xCB, 0xAE                  ] (RES 5 HLindirect)
    , TC "RES 5,A             " [0xCB, 0xAF                  ] (RES 5 A)
    , TC "RES 6,B             " [0xCB, 0xB0                  ] (RES 6 B)
    , TC "RES 6,C             " [0xCB, 0xB1                  ] (RES 6 C)
    , TC "RES 6,D             " [0xCB, 0xB2                  ] (RES 6 D)
    , TC "RES 6,E             " [0xCB, 0xB3                  ] (RES 6 E)
    , TC "RES 6,H             " [0xCB, 0xB4                  ] (RES 6 H)
    , TC "RES 6,L             " [0xCB, 0xB5                  ] (RES 6 L)
    , TC "RES 6,(HL)          " [0xCB, 0xB6                  ] (RES 6 HLindirect)
    , TC "RES 6,A             " [0xCB, 0xB7                  ] (RES 6 A)
    , TC "RES 7,B             " [0xCB, 0xB8                  ] (RES 7 B)
    , TC "RES 7,C             " [0xCB, 0xB9                  ] (RES 7 C)
    , TC "RES 7,D             " [0xCB, 0xBA                  ] (RES 7 D)
    , TC "RES 7,E             " [0xCB, 0xBB                  ] (RES 7 E)
    , TC "RES 7,H             " [0xCB, 0xBC                  ] (RES 7 H)
    , TC "RES 7,L             " [0xCB, 0xBD                  ] (RES 7 L)
    , TC "RES 7,(HL)          " [0xCB, 0xBE                  ] (RES 7 HLindirect)
    , TC "RES 7,A             " [0xCB, 0xBF                  ] (RES 7 A)
    , TC "SET 0,B             " [0xCB, 0xC0                  ] (SET 0 B)
    , TC "SET 0,C             " [0xCB, 0xC1                  ] (SET 0 C)
    , TC "SET 0,D             " [0xCB, 0xC2                  ] (SET 0 D)
    , TC "SET 0,E             " [0xCB, 0xC3                  ] (SET 0 E)
    , TC "SET 0,H             " [0xCB, 0xC4                  ] (SET 0 H)
    , TC "SET 0,L             " [0xCB, 0xC5                  ] (SET 0 L)
    , TC "SET 0,(HL)          " [0xCB, 0xC6                  ] (SET 0 HLindirect)
    , TC "SET 0,A             " [0xCB, 0xC7                  ] (SET 0 A)
    , TC "SET 1,B             " [0xCB, 0xC8                  ] (SET 1 B)
    , TC "SET 1,C             " [0xCB, 0xC9                  ] (SET 1 C)
    , TC "SET 1,D             " [0xCB, 0xCA                  ] (SET 1 D)
    , TC "SET 1,E             " [0xCB, 0xCB                  ] (SET 1 E)
    , TC "SET 1,H             " [0xCB, 0xCC                  ] (SET 1 H)
    , TC "SET 1,L             " [0xCB, 0xCD                  ] (SET 1 L)
    , TC "SET 1,(HL)          " [0xCB, 0xCE                  ] (SET 1 HLindirect)
    , TC "SET 1,A             " [0xCB, 0xCF                  ] (SET 1 A)
    , TC "SET 2,B             " [0xCB, 0xD0                  ] (SET 2 B)
    , TC "SET 2,C             " [0xCB, 0xD1                  ] (SET 2 C)
    , TC "SET 2,D             " [0xCB, 0xD2                  ] (SET 2 D)
    , TC "SET 2,E             " [0xCB, 0xD3                  ] (SET 2 E)
    , TC "SET 2,H             " [0xCB, 0xD4                  ] (SET 2 H)
    , TC "SET 2,L             " [0xCB, 0xD5                  ] (SET 2 L)
    , TC "SET 2,(HL)          " [0xCB, 0xD6                  ] (SET 2 HLindirect)
    , TC "SET 2,A             " [0xCB, 0xD7                  ] (SET 2 A)
    , TC "SET 3,B             " [0xCB, 0xD8                  ] (SET 3 B)
    , TC "SET 3,C             " [0xCB, 0xD9                  ] (SET 3 C)
    , TC "SET 3,D             " [0xCB, 0xDA                  ] (SET 3 D)
    , TC "SET 3,E             " [0xCB, 0xDB                  ] (SET 3 E)
    , TC "SET 3,H             " [0xCB, 0xDC                  ] (SET 3 H)
    , TC "SET 3,L             " [0xCB, 0xDD                  ] (SET 3 L)
    , TC "SET 3,(HL)          " [0xCB, 0xDE                  ] (SET 3 HLindirect)
    , TC "SET 3,A             " [0xCB, 0xDF                  ] (SET 3 A)
    , TC "SET 4,B             " [0xCB, 0xE0                  ] (SET 4 B)
    , TC "SET 4,C             " [0xCB, 0xE1                  ] (SET 4 C)
    , TC "SET 4,D             " [0xCB, 0xE2                  ] (SET 4 D)
    , TC "SET 4,E             " [0xCB, 0xE3                  ] (SET 4 E)
    , TC "SET 4,H             " [0xCB, 0xE4                  ] (SET 4 H)
    , TC "SET 4,L             " [0xCB, 0xE5                  ] (SET 4 L)
    , TC "SET 4,(HL)          " [0xCB, 0xE6                  ] (SET 4 HLindirect)
    , TC "SET 4,A             " [0xCB, 0xE7                  ] (SET 4 A)
    , TC "SET 5,B             " [0xCB, 0xE8                  ] (SET 5 B)
    , TC "SET 5,C             " [0xCB, 0xE9                  ] (SET 5 C)
    , TC "SET 5,D             " [0xCB, 0xEA                  ] (SET 5 D)
    , TC "SET 5,E             " [0xCB, 0xEB                  ] (SET 5 E)
    , TC "SET 5,H             " [0xCB, 0xEC                  ] (SET 5 H)
    , TC "SET 5,L             " [0xCB, 0xED                  ] (SET 5 L)
    , TC "SET 5,(HL)          " [0xCB, 0xEE                  ] (SET 5 HLindirect)
    , TC "SET 5,A             " [0xCB, 0xEF                  ] (SET 5 A)
    , TC "SET 6,B             " [0xCB, 0xF0                  ] (SET 6 B)
    , TC "SET 6,C             " [0xCB, 0xF1                  ] (SET 6 C)
    , TC "SET 6,D             " [0xCB, 0xF2                  ] (SET 6 D)
    , TC "SET 6,E             " [0xCB, 0xF3                  ] (SET 6 E)
    , TC "SET 6,H             " [0xCB, 0xF4                  ] (SET 6 H)
    , TC "SET 6,L             " [0xCB, 0xF5                  ] (SET 6 L)
    , TC "SET 6,(HL)          " [0xCB, 0xF6                  ] (SET 6 HLindirect)
    , TC "SET 6,A             " [0xCB, 0xF7                  ] (SET 6 A)
    , TC "SET 7,B             " [0xCB, 0xF8                  ] (SET 7 B)
    , TC "SET 7,C             " [0xCB, 0xF9                  ] (SET 7 C)
    , TC "SET 7,D             " [0xCB, 0xFA                  ] (SET 7 D)
    , TC "SET 7,E             " [0xCB, 0xFB                  ] (SET 7 E)
    , TC "SET 7,H             " [0xCB, 0xFC                  ] (SET 7 H)
    , TC "SET 7,L             " [0xCB, 0xFD                  ] (SET 7 L)
    , TC "SET 7,(HL)          " [0xCB, 0xFE                  ] (SET 7 HLindirect)
    , TC "SET 7,A             " [0xCB, 0xFF                  ] (SET 7 A)
    ]
  , TG "0xdd prefix (IX-indexed instructions)"
    [ TC "0xdd NOP            " [0xdd, 0x00                  ] NOP
    , TC "0xdd LD BC,NN       " [0xdd, 0x01, 0x56, 0x78      ] (LD (Reg16Imm (RPair16 BC) (mkAbstractAddr 0x7856)))
    , TC "0xdd LD (BC),A      " [0xdd, 0x02                  ] (LD ToBCindirect)
    , TC "0xdd INC BC         " [0xdd, 0x03                  ] (INC (IncDecReg16 (RPair16 BC)))
    , TC "0xdd INC B          " [0xdd, 0x04                  ] (INC (IncDecReg8 B))
    , TC "0xdd DEC B          " [0xdd, 0x05                  ] (DEC (IncDecReg8 B))
    , TC "0xdd LD B,N         " [0xdd, 0x06, 0x9a            ] (LD (Reg8Imm B 0x9a))
    , TC "0xdd RLCA           " [0xdd, 0x07                  ] RLCA
    , TC "0xdd EX AF,AF'      " [0xdd, 0x08                  ] (EXC AFAF')
    , TC "ADD IX,BC           " [0xDD, 0x09                  ] (ADD16 $ DestIX (RPair16 BC))
    , TC "0xdd LD A,(BC)      " [0xdd, 0x0A                  ] (LD FromBCindirect)
    , TC "0xdd DEC BC         " [0xdd, 0x0B                  ] (DEC (IncDecReg16 (RPair16 BC)))
    , TC "0xdd INC C          " [0xdd, 0x0C                  ] (INC (IncDecReg8 C))
    , TC "0xdd DEC C          " [0xdd, 0x0D                  ] (DEC (IncDecReg8 C))
    , TC "0xdd LD C,N         " [0xdd, 0x0E, 0xbc            ] (LD (Reg8Imm C 0xbc))
    , TC "0xdd RRCA           " [0xdd, 0x0F                  ] RRCA
    , TC "0xdd DJNZ $+2       " [0xdd, 0x10, 0xfe            ] (DJNZ (mkAbstractAddr (1+ testOrigin)))
    , TC "0xdd LD DE,NN       " [0xdd, 0x11, 0xde, 0x0f      ] (LD (Reg16Imm (RPair16 DE) (mkAbstractAddr 0x0fde)))
    , TC "0xdd LD (DE),A      " [0xdd, 0x12                  ] (LD ToDEindirect)
    , TC "0xdd INC DE         " [0xdd, 0x13                  ] (INC (IncDecReg16 (RPair16 DE)))
    , TC "0xdd INC D          " [0xdd, 0x14                  ] (INC (IncDecReg8 D))
    , TC "0xdd DEC D          " [0xdd, 0x15                  ] (DEC (IncDecReg8 D))
    , TC "0xdd LD D,N         " [0xdd, 0x16, 0x12            ] (LD (Reg8Imm D 0x12))
    , TC "0xdd RLA            " [0xdd, 0x17                  ] RLA
    , TC "0xdd JR $+2         " [0xdd, 0x18, 0xfe            ] (JR (mkAbstractAddr (1+ testOrigin)))
    , TC "ADD IX,DE           " [0xdd, 0x19                  ] (ADD16 $ DestIX (RPair16 DE))
    , TC "0xdd LD A,(DE)      " [0xdd, 0x1A                  ] (LD FromDEindirect)
    , TC "0xdd DEC DE         " [0xdd, 0x1B                  ] (DEC (IncDecReg16 (RPair16 DE)))
    , TC "0xdd INC E          " [0xdd, 0x1C                  ] (INC (IncDecReg8 E))
    , TC "0xdd DEC E          " [0xdd, 0x1D                  ] (DEC (IncDecReg8 E))
    , TC "0xdd LD E,N         " [0xdd, 0x1E, 0x34            ] (LD (Reg8Imm E 0x34))
    , TC "0xdd RRA            " [0xdd, 0x1F                  ] RRA
    , TC "0xdd JR NZ,$+2      " [0xdd, 0x20, 0xfe            ] (JRCC NZ (mkAbstractAddr (1+ testOrigin)))
    , TC "LD IX,NN            " [0xDD, 0x21, 0x56, 0x78      ] (LD (Reg16Imm (RPair16 IX) (mkAbstractAddr 0x7856)))
    , TC "LD (NN),IX          " [0xdd, 0x22, 0x9a, 0xbc      ] (LD16 (FromReg16 (RPair16 IX) (mkAbstractAddr 0xbc9a)))
    , TC "INC IX              " [0xdd, 0x23                  ] (INC (IncDecReg16 (RPair16 IX)))
    , TC "INC IXh             " [0xdd, 0x24                  ] (INC (IncDecReg8 IXh))
    , TC "DEC IXh             " [0xdd, 0x25                  ] (DEC (IncDecReg8 IXh))
    , TC "LD IXh,N            " [0xdd, 0x26, 0xde            ] (LD (Reg8Imm IXh 0xde))
    , TC "0xdd DAA            " [0xdd, 0x27                  ] DAA
    , TC "0xdd JR Z,$+2       " [0xdd, 0x28, 0xfe            ] (JRCC Z (mkAbstractAddr (1+ testOrigin)))
    , TC "ADD IX,IX           " [0xDD, 0x29                  ] (ADD16 $ DestIX (RPair16 IX))
    , TC "LD IX,(NN)          " [0xDD, 0x2A, 0xde, 0x0f      ] (LD16 (ToReg16 (RPair16 IX) (mkAbstractAddr 0x0fde)))
    , TC "DEC IX              " [0xDD, 0x2B                  ] (DEC (IncDecReg16 (RPair16 IX)))
    , TC "INC IXl             " [0xdd, 0x2C                  ] (INC (IncDecReg8 IXl))
    , TC "DEC IXl             " [0xdd, 0x2D                  ] (DEC (IncDecReg8 IXl))
    , TC "LD IXl,N            " [0xdd, 0x2E, 0x34            ] (LD (Reg8Imm IXl 0x34))
    , TC "0xdd CPL            " [0xdd, 0x2F                  ] CPL
    , TC "0xdd JR NC,$+2      " [0xdd, 0x30, 0xfe            ] (JRCC NC (mkAbstractAddr (1+ testOrigin)))
    , TC "0xdd LD SP,NN       " [0xdd, 0x31, 0x56, 0x78      ] (LD (Reg16Imm SP (mkAbstractAddr 0x7856)))
    , TC "0xdd LD (NN),A      " [0xdd, 0x32, 0x9a, 0xbc      ] (LD (AccToMem (mkAbstractAddr 0xbc9a)))
    , TC "0xdd INC SP         " [0xdd, 0x33                  ] (INC (IncDecReg16 SP))
    , TC "INC (IX+N)          " [0xDD, 0x34, 0x12            ] (INC (IncDecReg8 (IXindirect 0x12)))
    , TC "DEC (IX+N)          " [0xDD, 0x35, 0x34            ] (DEC (IncDecReg8 (IXindirect 0x34)))
    , TC "LD (IX+N),N         " [0xDD, 0x36, 0x56, 0x78      ] (LD (Reg8Imm (IXindirect 0x56) 0x78))
    , TC "0xdd SCF            " [0xdd, 0x37                  ] SCF
    , TC "0xdd JR C,$+2       " [0xdd, 0x38, 0xfe            ] (JRCC CY (mkAbstractAddr (1+ testOrigin)))
    , TC "ADD IX,SP           " [0xdd, 0x39                  ] (ADD16 $ DestIX SP)
    , TC "0xdd LD A,(NN)      " [0xdd, 0x3A, 0x0f, 0x12      ] (LD (AccFromMem (mkAbstractAddr 0x120f)))
    , TC "0xdd DEC SP         " [0xdd, 0x3B                  ] (DEC (IncDecReg16 SP))
    , TC "0xdd INC A          " [0xdd, 0x3C                  ] (INC (IncDecReg8 A))
    , TC "0xdd DEC A          " [0xdd, 0x3D                  ] (DEC (IncDecReg8 A))
    , TC "0xdd LD A,N         " [0xdd, 0x3E, 0x34            ] (LD (Reg8Imm A 0x34))
    , TC "0xdd CCF            " [0xdd, 0x3F                  ] CCF
    , TC "0xdd LD B,B         " [0xdd, 0x40                  ] (LD (Reg8Reg8 B B))
    , TC "0xdd LD B,C         " [0xdd, 0x41                  ] (LD (Reg8Reg8 B C))
    , TC "0xdd LD B,D         " [0xdd, 0x42                  ] (LD (Reg8Reg8 B D))
    , TC "0xdd LD B,E         " [0xdd, 0x43                  ] (LD (Reg8Reg8 B E))
    , TC "LD B,IXh            " [0xdd, 0x44                  ] (LD (Reg8Reg8 B IXh))
    , TC "LD B,IXl            " [0xdd, 0x45                  ] (LD (Reg8Reg8 B IXl))
    , TC "LD B,(IX+N)         " [0xDD, 0x46, 0x9a            ] (LD (Reg8Reg8 B (IXindirect (negate 102))))
    , TC "0xdd LD B,A         " [0xdd, 0x47                  ] (LD (Reg8Reg8 B A))
    , TC "0xdd LD C,B         " [0xdd, 0x48                  ] (LD (Reg8Reg8 C B))
    , TC "0xdd LD C,C         " [0xdd, 0x49                  ] (LD (Reg8Reg8 C C))
    , TC "0xdd LD C,D         " [0xdd, 0x4A                  ] (LD (Reg8Reg8 C D))
    , TC "0xdd LD C,E         " [0xdd, 0x4B                  ] (LD (Reg8Reg8 C E))
    , TC "LD C,IXh            " [0xdd, 0x4C                  ] (LD (Reg8Reg8 C IXh))
    , TC "LD C,IXl            " [0xdd, 0x4D                  ] (LD (Reg8Reg8 C IXl))
    , TC "LD C,(IX+N)         " [0xDD, 0x4E, 0xbc            ] (LD (Reg8Reg8 C (IXindirect (negate 68))))
    , TC "0xdd LD C,A         " [0xdd, 0x4F                  ] (LD (Reg8Reg8 C A))
    , TC "0xdd LD D,B         " [0xdd, 0x50                  ] (LD (Reg8Reg8 D B))
    , TC "0xdd LD D,C         " [0xdd, 0x51                  ] (LD (Reg8Reg8 D C))
    , TC "0xdd LD D,D         " [0xdd, 0x52                  ] (LD (Reg8Reg8 D D))
    , TC "0xdd LD D,E         " [0xdd, 0x53                  ] (LD (Reg8Reg8 D E))
    , TC "LD D,IXh            " [0xdd, 0x54                  ] (LD (Reg8Reg8 D IXh))
    , TC "LD D,IXl            " [0xdd, 0x55                  ] (LD (Reg8Reg8 D IXl))
    , TC "LD D,(IX+N)         " [0xDD, 0x56, 0xde            ] (LD (Reg8Reg8 D (IXindirect (negate 34))))
    , TC "0xdd LD D,A         " [0xdd, 0x57                  ] (LD (Reg8Reg8 D A))
    , TC "0xdd LD E,B         " [0xdd, 0x58                  ] (LD (Reg8Reg8 E B))
    , TC "0xdd LD E,C         " [0xdd, 0x59                  ] (LD (Reg8Reg8 E C))
    , TC "0xdd LD E,D         " [0xdd, 0x5A                  ] (LD (Reg8Reg8 E D))
    , TC "0xdd LD E,E         " [0xdd, 0x5B                  ] (LD (Reg8Reg8 E E))
    , TC "LD E,IXh            " [0xdd, 0x5C                  ] (LD (Reg8Reg8 E IXh))
    , TC "LD E,IXl            " [0xdd, 0x5D                  ] (LD (Reg8Reg8 E IXl))
    , TC "LD E,(IX+N)         " [0xDD, 0x5E, 0x0f            ] (LD (Reg8Reg8 E (IXindirect 0x0f)))
    , TC "0xdd LD E,A         " [0xdd, 0x5F                  ] (LD (Reg8Reg8 E A))
    , TC "LD IXh,B            " [0xdd, 0x60                  ] (LD (Reg8Reg8 IXh B))
    , TC "LD IXh,C            " [0xdd, 0x61                  ] (LD (Reg8Reg8 IXh C))
    , TC "LD IXh,D            " [0xdd, 0x62                  ] (LD (Reg8Reg8 IXh D))
    , TC "LD IXh,E            " [0xdd, 0x63                  ] (LD (Reg8Reg8 IXh E))
    , TC "LD IXh,IXh          " [0xdd, 0x64                  ] (LD (Reg8Reg8 IXh IXh))
    , TC "LD IXh,IXl          " [0xdd, 0x65                  ] (LD (Reg8Reg8 IXh IXl))
    , TC "LD H,(IX+N)         " [0xDD, 0x66, 0x12            ] (LD (Reg8Reg8 H (IXindirect 0x12)))
    , TC "LD Ixh,A            " [0xdd, 0x67                  ] (LD (Reg8Reg8 IXh A))
    , TC "LD IXl,B            " [0xdd, 0x68                  ] (LD (Reg8Reg8 IXl B))
    , TC "LD IXl,C            " [0xdd, 0x69                  ] (LD (Reg8Reg8 IXl C))
    , TC "LD IXl,D            " [0xdd, 0x6A                  ] (LD (Reg8Reg8 IXl D))
    , TC "LD IXl,E            " [0xdd, 0x6B                  ] (LD (Reg8Reg8 IXl E))
    , TC "LD IXl,IXh          " [0xdd, 0x6C                  ] (LD (Reg8Reg8 IXl IXh))
    , TC "LD IXl,IXl          " [0xdd, 0x6D                  ] (LD (Reg8Reg8 IXl IXl))
    , TC "LD L,(IX+N)         " [0xDD, 0x6E, 0x34            ] (LD (Reg8Reg8 L (IXindirect 0x34)))
    , TC "LD IXl,A            " [0xdd, 0x6F                  ] (LD (Reg8Reg8 IXl A))
    , TC "LD (IX+N),B         " [0xDD, 0x70, 0x56            ] (LD (Reg8Reg8 (IXindirect 0x56) B))
    , TC "LD (IX+N),C         " [0xDD, 0x71, 0x78            ] (LD (Reg8Reg8 (IXindirect 0x78) C))
    , TC "LD (IX+N),D         " [0xDD, 0x72, 0x9a            ] (LD (Reg8Reg8 (IXindirect (negate 102)) D))
    , TC "LD (IX+N),E         " [0xDD, 0x73, 0xbc            ] (LD (Reg8Reg8 (IXindirect (negate 68)) E))
    , TC "LD (IX+N),H         " [0xDD, 0x74, 0xde            ] (LD (Reg8Reg8 (IXindirect (negate 34)) H))
    , TC "LD (IX+N),L         " [0xDD, 0x75, 0x0f            ] (LD (Reg8Reg8 (IXindirect 0x0f) L))
    , TC "0xdd HALT           " [0xdd, 0x76                  ] HALT
    , TC "LD (IX+N),A         " [0xDD, 0x77, 0x12            ] (LD (Reg8Reg8 (IXindirect 0x12) A))
    , TC "0xdd LD A,B         " [0xdd, 0x78                  ] (LD (Reg8Reg8 A B))
    , TC "0xdd LD A,C         " [0xdd, 0x79                  ] (LD (Reg8Reg8 A C))
    , TC "0xdd LD A,D         " [0xdd, 0x7A                  ] (LD (Reg8Reg8 A D))
    , TC "0xdd LD A,E         " [0xdd, 0x7B                  ] (LD (Reg8Reg8 A E))
    , TC "LD A,IXh            " [0xdd, 0x7C                  ] (LD (Reg8Reg8 A IXh))
    , TC "LD A,IXl            " [0xdd, 0x7D                  ] (LD (Reg8Reg8 A IXl))
    , TC "LD A,(IX+N)         " [0xDD, 0x7E, 0x34            ] (LD (Reg8Reg8 A (IXindirect 0x34)))
    , TC "0xdd LD A,A         " [0xdd, 0x7F                  ] (LD (Reg8Reg8 A A))
    , TC "0xdd ADD A,B        " [0xdd, 0x80                  ] (ADD (ALUreg8 B))
    , TC "0xdd ADD A,C        " [0xdd, 0x81                  ] (ADD (ALUreg8 C))
    , TC "0xdd ADD A,D        " [0xdd, 0x82                  ] (ADD (ALUreg8 D))
    , TC "0xdd ADD A,E        " [0xdd, 0x83                  ] (ADD (ALUreg8 E))
    , TC "ADD A,IXh           " [0xdd, 0x84                  ] (ADD (ALUreg8 IXh))
    , TC "ADD A,IXl           " [0xdd, 0x85                  ] (ADD (ALUreg8 IXl))
    , TC "ADD A,(IX+N)        " [0xDD, 0x86, 0x56            ] (ADD (ALUreg8 (IXindirect 0x56)))
    , TC "0xdd ADD A,A        " [0xdd, 0x87                  ] (ADD (ALUreg8 A))
    , TC "0xdd ADC A,B        " [0xdd, 0x88                  ] (ADC (ALUreg8 B))
    , TC "0xdd ADC A,C        " [0xdd, 0x89                  ] (ADC (ALUreg8 C))
    , TC "0xdd ADC A,D        " [0xdd, 0x8A                  ] (ADC (ALUreg8 D))
    , TC "0xdd ADC A,E        " [0xdd, 0x8B                  ] (ADC (ALUreg8 E))
    , TC "0xdd ADC A,IXh      " [0xdd, 0x8C                  ] (ADC (ALUreg8 IXh))
    , TC "0xdd ADC A,IXl      " [0xdd, 0x8D                  ] (ADC (ALUreg8 IXl))
    , TC "ADC A,(IX+N)        " [0xDD, 0x8E, 0x78            ] (ADC (ALUreg8 (IXindirect 0x78)))
    , TC "0xdd ADC A,A        " [0xdd, 0x8F                  ] (ADC (ALUreg8 A))
    , TC "0xdd SUB B          " [0xdd, 0x90                  ] (SUB (ALUreg8 B))
    , TC "0xdd SUB C          " [0xdd, 0x91                  ] (SUB (ALUreg8 C))
    , TC "0xdd SUB D          " [0xdd, 0x92                  ] (SUB (ALUreg8 D))
    , TC "0xdd SUB E          " [0xdd, 0x93                  ] (SUB (ALUreg8 E))
    , TC "0xdd SUB IXh        " [0xdd, 0x94                  ] (SUB (ALUreg8 IXh))
    , TC "0xdd SUB IXl        " [0xdd, 0x95                  ] (SUB (ALUreg8 IXl))
    , TC "SUB (IX+N)          " [0xDD, 0x96, 0x9a            ] (SUB (ALUreg8 (IXindirect (negate 102))))
    , TC "0xdd SUB A          " [0xdd, 0x97                  ] (SUB (ALUreg8 A))
    , TC "0xdd SBC B          " [0xdd, 0x98                  ] (SBC (ALUreg8 B))
    , TC "0xdd SBC C          " [0xdd, 0x99                  ] (SBC (ALUreg8 C))
    , TC "0xdd SBC D          " [0xdd, 0x9A                  ] (SBC (ALUreg8 D))
    , TC "0xdd SBC E          " [0xdd, 0x9B                  ] (SBC (ALUreg8 E))
    , TC "0xdd SBC IXh        " [0xdd, 0x9C                  ] (SBC (ALUreg8 IXh))
    , TC "0xdd SBC IXl        " [0xdd, 0x9D                  ] (SBC (ALUreg8 IXl))
    , TC "SBC A,(IX+N)        " [0xDD, 0x9E, 0xbc            ] (SBC (ALUreg8 (IXindirect(negate 68))))
    , TC "0xdd SBC A          " [0xdd, 0x9F                  ] (SBC (ALUreg8 A))
    , TC "0xdd AND B          " [0xdd, 0xA0                  ] (AND (ALUreg8 B))
    , TC "0xdd AND C          " [0xdd, 0xA1                  ] (AND (ALUreg8 C))
    , TC "0xdd AND D          " [0xdd, 0xA2                  ] (AND (ALUreg8 D))
    , TC "0xdd AND E          " [0xdd, 0xA3                  ] (AND (ALUreg8 E))
    , TC "0xdd AND IXh        " [0xdd, 0xA4                  ] (AND (ALUreg8 IXh))
    , TC "0xdd AND IXh        " [0xdd, 0xA5                  ] (AND (ALUreg8 IXl))
    , TC "AND (IX+N)          " [0xDD, 0xA6, 0xde            ] (AND (ALUreg8 (IXindirect (negate 34))))
    , TC "0xdd AND A          " [0xdd, 0xA7                  ] (AND (ALUreg8 A))
    , TC "0xdd XOR B          " [0xdd, 0xA8                  ] (XOR (ALUreg8 B))
    , TC "0xdd XOR C          " [0xdd, 0xA9                  ] (XOR (ALUreg8 C))
    , TC "0xdd XOR D          " [0xdd, 0xAA                  ] (XOR (ALUreg8 D))
    , TC "0xdd XOR E          " [0xdd, 0xAB                  ] (XOR (ALUreg8 E))
    , TC "0xdd XOR IXh        " [0xdd, 0xAC                  ] (XOR (ALUreg8 IXh))
    , TC "0xdd XOR IXl        " [0xdd, 0xAD                  ] (XOR (ALUreg8 IXl))
    , TC "XOR (IX+N)          " [0xDD, 0xAE, 0x0f            ] (XOR (ALUreg8 (IXindirect 0x0f)))
    , TC "0xdd XOR A          " [0xdd, 0xAF                  ] (XOR (ALUreg8 A))
    , TC "0xdd OR B           " [0xdd, 0xB0                  ] (OR (ALUreg8 B))
    , TC "0xdd OR C           " [0xdd, 0xB1                  ] (OR (ALUreg8 C))
    , TC "0xdd OR D           " [0xdd, 0xB2                  ] (OR (ALUreg8 D))
    , TC "0xdd OR E           " [0xdd, 0xB3                  ] (OR (ALUreg8 E))
    , TC "0xdd OR IXh         " [0xdd, 0xB4                  ] (OR (ALUreg8 IXh))
    , TC "0xdd OR IXh         " [0xdd, 0xB5                  ] (OR (ALUreg8 IXl))
    , TC "OR (IX+N)           " [0xDD, 0xB6, 0x12            ] (OR (ALUreg8 (IXindirect 0x12)))
    , TC "0xdd OR A           " [0xdd, 0xB7                  ] (OR (ALUreg8 A))
    , TC "0xdd CP B           " [0xdd, 0xB8                  ] (CP (ALUreg8 B))
    , TC "0xdd CP C           " [0xdd, 0xB9                  ] (CP (ALUreg8 C))
    , TC "0xdd CP D           " [0xdd, 0xBA                  ] (CP (ALUreg8 D))
    , TC "0xdd CP E           " [0xdd, 0xBB                  ] (CP (ALUreg8 E))
    , TC "0xdd CP IXh         " [0xdd, 0xBC                  ] (CP (ALUreg8 IXh))
    , TC "0xdd CP IXl         " [0xdd, 0xBD                  ] (CP (ALUreg8 IXl))
    , TC "CP (IX+N)           " [0xDD, 0xBE, 0x34            ] (CP (ALUreg8 (IXindirect 0x34)))
    , TC "0xdd CP A           " [0xdd, 0xBF                  ] (CP (ALUreg8 A))
    , TC "0xdd RET NZ         " [0xdd, 0xC0                  ] (RETCC NZ)
    , TC "0xdd POP BC         " [0xdd, 0xC1                  ] (POP (AFPair16 BC))
    , TC "0xdd JP NZ,$+3      " [0xdd, 0xC2, 0x78, 0x56      ] (JPCC NZ (mkAbstractAddr 0x5678))
    , TC "0xdd JP $+3         " [0xdd, 0xC3, 0x34, 0x12      ] (JP (mkAbstractAddr 0x1234))
    , TC "0xdd CALL NZ,NN     " [0xdd, 0xC4, 0x56, 0x78      ] (CALLCC NZ (mkAbstractAddr 0x7856))
    , TC "0xdd PUSH BC        " [0xdd, 0xC5                  ] (PUSH (AFPair16 BC))
    , TC "0xdd ADD A,N        " [0xdd, 0xC6, 0x9a            ] (ADD (ALUimm 0x9a))
    , TC "0xdd RST 0          " [0xdd, 0xC7                  ] (RST 0)
    , TC "0xdd RET Z          " [0xdd, 0xC8                  ] (RETCC Z)
    , TC "0xdd RET            " [0xdd, 0xC9                  ] RET
    , TC "0xdd JP Z,$+3       " [0xdd, 0xCA, 0xbb, 0xaa      ] (JPCC Z (mkAbstractAddr 0xaabb))
    , TC "RLC (IX+d)->B       " [0xdd, 0xCB, 0x10, 0x00      ] (RLCidx (IXindirect 0x10) B)
    , TC "RLC (IX+d)->C       " [0xdd, 0xCB, 0x11, 0x01      ] (RLCidx (IXindirect 0x11) C)
    , TC "RLC (IX+d)->D       " [0xdd, 0xCB, 0x12, 0x02      ] (RLCidx (IXindirect 0x12) D)
    , TC "RLC (IX+d)->E       " [0xdd, 0xCB, 0x13, 0x03      ] (RLCidx (IXindirect 0x13) E)
    , TC "RLC (IX+d)->H       " [0xdd, 0xCB, 0x14, 0x04      ] (RLCidx (IXindirect 0x14) H)
    , TC "RLC (IX+d)->L       " [0xdd, 0xCB, 0x15, 0x05      ] (RLCidx (IXindirect 0x15) L)
    , TC "RLC (IX+d)          " [0xdd, 0xCB, 0x16, 0x06      ] (RLC (IXindirect 0x16))
    , TC "RLC (IX+d)->A       " [0xdd, 0xCB, 0x17, 0x07      ] (RLCidx (IXindirect 0x17) A)
    , TC "RRC (IX+d)->B       " [0xdd, 0xCB, 0x10, 0x08      ] (RRCidx (IXindirect 0x10) B)
    , TC "RRC (IX+d)->C       " [0xdd, 0xCB, 0x11, 0x09      ] (RRCidx (IXindirect 0x11) C)
    , TC "RRC (IX+d)->D       " [0xdd, 0xCB, 0x12, 0x0a      ] (RRCidx (IXindirect 0x12) D)
    , TC "RRC (IX+d)->E       " [0xdd, 0xCB, 0x13, 0x0b      ] (RRCidx (IXindirect 0x13) E)
    , TC "RRC (IX+d)->H       " [0xdd, 0xCB, 0x14, 0x0c      ] (RRCidx (IXindirect 0x14) H)
    , TC "RRC (IX+d)->L       " [0xdd, 0xCB, 0x15, 0x0d      ] (RRCidx (IXindirect 0x15) L)
    , TC "RRC (IX+d)          " [0xdd, 0xCB, 0x16, 0x0e      ] (RRC (IXindirect 0x16))
    , TC "RRC (IX+d)->A       " [0xdd, 0xCB, 0x17, 0x0f      ] (RRCidx (IXindirect 0x17) A)
    , TC "RL (IX+d)->B        " [0xdd, 0xCB, 0x10, 0x10      ] (RLidx (IXindirect 0x10) B)
    , TC "RL (IX+d)->C        " [0xdd, 0xCB, 0x11, 0x11      ] (RLidx (IXindirect 0x11) C)
    , TC "RL (IX+d)->D        " [0xdd, 0xCB, 0x12, 0x12      ] (RLidx (IXindirect 0x12) D)
    , TC "RL (IX+d)->E        " [0xdd, 0xCB, 0x13, 0x13      ] (RLidx (IXindirect 0x13) E)
    , TC "RL (IX+d)->H        " [0xdd, 0xCB, 0x14, 0x14      ] (RLidx (IXindirect 0x14) H)
    , TC "RL (IX+d)->L        " [0xdd, 0xCB, 0x15, 0x15      ] (RLidx (IXindirect 0x15) L)
    , TC "RL (IX+d)           " [0xdd, 0xCB, 0x16, 0x16      ] (RL (IXindirect 0x16))
    , TC "RL (IX+d)->A        " [0xdd, 0xCB, 0x17, 0x17      ] (RLidx (IXindirect 0x17) A)
    , TC "RR (IX+d)->B        " [0xdd, 0xCB, 0x10, 0x18      ] (RRidx (IXindirect 0x10) B)
    , TC "RR (IX+d)->C        " [0xdd, 0xCB, 0x11, 0x19      ] (RRidx (IXindirect 0x11) C)
    , TC "RR (IX+d)->D        " [0xdd, 0xCB, 0x12, 0x1a      ] (RRidx (IXindirect 0x12) D)
    , TC "RR (IX+d)->E        " [0xdd, 0xCB, 0x13, 0x1b      ] (RRidx (IXindirect 0x13) E)
    , TC "RR (IX+d)->H        " [0xdd, 0xCB, 0x14, 0x1c      ] (RRidx (IXindirect 0x14) H)
    , TC "RR (IX+d)->L        " [0xdd, 0xCB, 0x15, 0x1d      ] (RRidx (IXindirect 0x15) L)
    , TC "RR (IX+d)           " [0xdd, 0xCB, 0x16, 0x1e      ] (RR (IXindirect 0x16))
    , TC "RR (IX+d)->A        " [0xdd, 0xCB, 0x17, 0x1f      ] (RRidx (IXindirect 0x17) A)
    , TC "SLA (IX+d)->B       " [0xdd, 0xCB, 0x10, 0x20      ] (SLAidx (IXindirect 0x10) B)
    , TC "SLA (IX+d)->C       " [0xdd, 0xCB, 0x11, 0x21      ] (SLAidx (IXindirect 0x11) C)
    , TC "SLA (IX+d)->D       " [0xdd, 0xCB, 0x12, 0x22      ] (SLAidx (IXindirect 0x12) D)
    , TC "SLA (IX+d)->E       " [0xdd, 0xCB, 0x13, 0x23      ] (SLAidx (IXindirect 0x13) E)
    , TC "SLA (IX+d)->H       " [0xdd, 0xCB, 0x14, 0x24      ] (SLAidx (IXindirect 0x14) H)
    , TC "SLA (IX+d)->L       " [0xdd, 0xCB, 0x15, 0x25      ] (SLAidx (IXindirect 0x15) L)
    , TC "SLA (IX+d)          " [0xdd, 0xCB, 0x16, 0x26      ] (SLA (IXindirect 0x16))
    , TC "SLA (IX+d)->A       " [0xdd, 0xCB, 0x17, 0x27      ] (SLAidx (IXindirect 0x17) A)
    , TC "SRA (IX+d)->B       " [0xdd, 0xCB, 0x10, 0x28      ] (SRAidx (IXindirect 0x10) B)
    , TC "SRA (IX+d)->C       " [0xdd, 0xCB, 0x11, 0x29      ] (SRAidx (IXindirect 0x11) C)
    , TC "SRA (IX+d)->D       " [0xdd, 0xCB, 0x12, 0x2a      ] (SRAidx (IXindirect 0x12) D)
    , TC "SRA (IX+d)->E       " [0xdd, 0xCB, 0x13, 0x2b      ] (SRAidx (IXindirect 0x13) E)
    , TC "SRA (IX+d)->H       " [0xdd, 0xCB, 0x14, 0x2c      ] (SRAidx (IXindirect 0x14) H)
    , TC "SRA (IX+d)->L       " [0xdd, 0xCB, 0x15, 0x2d      ] (SRAidx (IXindirect 0x15) L)
    , TC "SRA (IX+d)          " [0xdd, 0xCB, 0x16, 0x2e      ] (SRA (IXindirect 0x16))
    , TC "SRA (IX+d)->A       " [0xdd, 0xCB, 0x17, 0x2f      ] (SRAidx (IXindirect 0x17) A)
    , TC "SLL (IX+d)->B       " [0xdd, 0xCB, 0x10, 0x30      ] (SLLidx (IXindirect 0x10) B)
    , TC "SLL (IX+d)->C       " [0xdd, 0xCB, 0x11, 0x31      ] (SLLidx (IXindirect 0x11) C)
    , TC "SLL (IX+d)->D       " [0xdd, 0xCB, 0x12, 0x32      ] (SLLidx (IXindirect 0x12) D)
    , TC "SLL (IX+d)->E       " [0xdd, 0xCB, 0x13, 0x33      ] (SLLidx (IXindirect 0x13) E)
    , TC "SLL (IX+d)->H       " [0xdd, 0xCB, 0x14, 0x34      ] (SLLidx (IXindirect 0x14) H)
    , TC "SLL (IX+d)->L       " [0xdd, 0xCB, 0x15, 0x35      ] (SLLidx (IXindirect 0x15) L)
    , TC "SLL (IX+d)          " [0xdd, 0xCB, 0x16, 0x36      ] (SLL (IXindirect 0x16))
    , TC "SLL (IX+d)->A       " [0xdd, 0xCB, 0x17, 0x37      ] (SLLidx (IXindirect 0x17) A)
    , TC "SRL (IX+d)->B       " [0xdd, 0xCB, 0x10, 0x38      ] (SRLidx (IXindirect 0x10) B)
    , TC "SRL (IX+d)->C       " [0xdd, 0xCB, 0x11, 0x39      ] (SRLidx (IXindirect 0x11) C)
    , TC "SRL (IX+d)->D       " [0xdd, 0xCB, 0x12, 0x3a      ] (SRLidx (IXindirect 0x12) D)
    , TC "SRL (IX+d)->E       " [0xdd, 0xCB, 0x13, 0x3b      ] (SRLidx (IXindirect 0x13) E)
    , TC "SRL (IX+d)->H       " [0xdd, 0xCB, 0x14, 0x3c      ] (SRLidx (IXindirect 0x14) H)
    , TC "SRL (IX+d)->L       " [0xdd, 0xCB, 0x15, 0x3d      ] (SRLidx (IXindirect 0x15) L)
    , TC "SRL (IX+d)          " [0xdd, 0xCB, 0x16, 0x3e      ] (SRL (IXindirect 0x16))
    , TC "SRL (IX+d)->A       " [0xdd, 0xCB, 0x17, 0x3f      ] (SRLidx (IXindirect 0x17) A)
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x20, 0x40      ] (BIT 0 (IXindirect 0x20))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x21, 0x41      ] (BIT 0 (IXindirect 0x21))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x22, 0x42      ] (BIT 0 (IXindirect 0x22))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x23, 0x43      ] (BIT 0 (IXindirect 0x23))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x24, 0x44      ] (BIT 0 (IXindirect 0x24))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x25, 0x45      ] (BIT 0 (IXindirect 0x25))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x26, 0x46      ] (BIT 0 (IXindirect 0x26))
    , TC "BIT 0,(IX+d)        " [0xdd, 0xCB, 0x27, 0x47      ] (BIT 0 (IXindirect 0x27))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x28, 0x48      ] (BIT 1 (IXindirect 0x28))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x29, 0x49      ] (BIT 1 (IXindirect 0x29))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x2a, 0x4a      ] (BIT 1 (IXindirect 0x2a))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x2b, 0x4b      ] (BIT 1 (IXindirect 0x2b))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x2c, 0x4c      ] (BIT 1 (IXindirect 0x2c))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x2d, 0x4d      ] (BIT 1 (IXindirect 0x2d))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x2e, 0x4e      ] (BIT 1 (IXindirect 0x2e))
    , TC "BIT 1,(IX+d)        " [0xdd, 0xCB, 0x2f, 0x4f      ] (BIT 1 (IXindirect 0x2f))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x20, 0x50      ] (BIT 2 (IXindirect 0x20))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x21, 0x51      ] (BIT 2 (IXindirect 0x21))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x22, 0x52      ] (BIT 2 (IXindirect 0x22))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x23, 0x53      ] (BIT 2 (IXindirect 0x23))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x24, 0x54      ] (BIT 2 (IXindirect 0x24))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x25, 0x55      ] (BIT 2 (IXindirect 0x25))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x26, 0x56      ] (BIT 2 (IXindirect 0x26))
    , TC "BIT 2,(IX+d)        " [0xdd, 0xCB, 0x27, 0x57      ] (BIT 2 (IXindirect 0x27))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x28, 0x58      ] (BIT 3 (IXindirect 0x28))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x29, 0x59      ] (BIT 3 (IXindirect 0x29))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x2a, 0x5a      ] (BIT 3 (IXindirect 0x2a))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x2b, 0x5b      ] (BIT 3 (IXindirect 0x2b))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x2c, 0x5c      ] (BIT 3 (IXindirect 0x2c))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x2d, 0x5d      ] (BIT 3 (IXindirect 0x2d))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x2e, 0x5e      ] (BIT 3 (IXindirect 0x2e))
    , TC "BIT 3,(IX+d)        " [0xdd, 0xCB, 0x2f, 0x5f      ] (BIT 3 (IXindirect 0x2f))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x20, 0x60      ] (BIT 4 (IXindirect 0x20))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x21, 0x61      ] (BIT 4 (IXindirect 0x21))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x22, 0x62      ] (BIT 4 (IXindirect 0x22))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x23, 0x63      ] (BIT 4 (IXindirect 0x23))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x24, 0x64      ] (BIT 4 (IXindirect 0x24))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x25, 0x65      ] (BIT 4 (IXindirect 0x25))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x26, 0x66      ] (BIT 4 (IXindirect 0x26))
    , TC "BIT 4,(IX+d)        " [0xdd, 0xCB, 0x27, 0x67      ] (BIT 4 (IXindirect 0x27))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x28, 0x68      ] (BIT 5 (IXindirect 0x28))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x29, 0x69      ] (BIT 5 (IXindirect 0x29))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x2a, 0x6a      ] (BIT 5 (IXindirect 0x2a))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x2b, 0x6b      ] (BIT 5 (IXindirect 0x2b))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x2c, 0x6c      ] (BIT 5 (IXindirect 0x2c))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x2d, 0x6d      ] (BIT 5 (IXindirect 0x2d))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x2e, 0x6e      ] (BIT 5 (IXindirect 0x2e))
    , TC "BIT 5,(IX+d)        " [0xdd, 0xCB, 0x2f, 0x6f      ] (BIT 5 (IXindirect 0x2f))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x20, 0x70      ] (BIT 6 (IXindirect 0x20))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x21, 0x71      ] (BIT 6 (IXindirect 0x21))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x22, 0x72      ] (BIT 6 (IXindirect 0x22))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x23, 0x73      ] (BIT 6 (IXindirect 0x23))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x24, 0x74      ] (BIT 6 (IXindirect 0x24))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x25, 0x75      ] (BIT 6 (IXindirect 0x25))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x26, 0x76      ] (BIT 6 (IXindirect 0x26))
    , TC "BIT 6,(IX+d)        " [0xdd, 0xCB, 0x27, 0x77      ] (BIT 6 (IXindirect 0x27))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x28, 0x78      ] (BIT 7 (IXindirect 0x28))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x29, 0x79      ] (BIT 7 (IXindirect 0x29))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x2a, 0x7a      ] (BIT 7 (IXindirect 0x2a))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x2b, 0x7b      ] (BIT 7 (IXindirect 0x2b))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x2c, 0x7c      ] (BIT 7 (IXindirect 0x2c))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x2d, 0x7d      ] (BIT 7 (IXindirect 0x2d))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x2e, 0x7e      ] (BIT 7 (IXindirect 0x2e))
    , TC "BIT 7,(IX+d)        " [0xdd, 0xCB, 0x2f, 0x7f      ] (BIT 7 (IXindirect 0x2f))
    , TC "RES 0,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0x80      ] (RESidx 0 (IXindirect 0x10) B)
    , TC "RES 0,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0x81      ] (RESidx 0 (IXindirect 0x11) C)
    , TC "RES 0,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0x82      ] (RESidx 0 (IXindirect 0x12) D)
    , TC "RES 0,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0x83      ] (RESidx 0 (IXindirect 0x13) E)
    , TC "RES 0,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0x84      ] (RESidx 0 (IXindirect 0x14) H)
    , TC "RES 0,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0x85      ] (RESidx 0 (IXindirect 0x15) L)
    , TC "RES 0,(IX+d)        " [0xdd, 0xCB, 0x16, 0x86      ] (RES 0 (IXindirect 0x16))
    , TC "RES 0,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0x87      ] (RESidx 0 (IXindirect 0x17) A)
    , TC "RES 1,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0x88      ] (RESidx 1 (IXindirect 0x10) B)
    , TC "RES 1,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0x89      ] (RESidx 1 (IXindirect 0x11) C)
    , TC "RES 1,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0x8a      ] (RESidx 1 (IXindirect 0x12) D)
    , TC "RES 1,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0x8b      ] (RESidx 1 (IXindirect 0x13) E)
    , TC "RES 1,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0x8c      ] (RESidx 1 (IXindirect 0x14) H)
    , TC "RES 1,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0x8d      ] (RESidx 1 (IXindirect 0x15) L)
    , TC "RES 1,(IX+d)        " [0xdd, 0xCB, 0x16, 0x8e      ] (RES 1 (IXindirect 0x16))
    , TC "RES 1,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0x8f      ] (RESidx 1 (IXindirect 0x17) A)
    , TC "RES 2,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0x90      ] (RESidx 2 (IXindirect 0x10) B)
    , TC "RES 2,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0x91      ] (RESidx 2 (IXindirect 0x11) C)
    , TC "RES 2,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0x92      ] (RESidx 2 (IXindirect 0x12) D)
    , TC "RES 2,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0x93      ] (RESidx 2 (IXindirect 0x13) E)
    , TC "RES 2,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0x94      ] (RESidx 2 (IXindirect 0x14) H)
    , TC "RES 2,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0x95      ] (RESidx 2 (IXindirect 0x15) L)
    , TC "RES 2,(IX+d)        " [0xdd, 0xCB, 0x16, 0x96      ] (RES 2 (IXindirect 0x16))
    , TC "RES 2,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0x97      ] (RESidx 2 (IXindirect 0x17) A)
    , TC "RES 3,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0x98      ] (RESidx 3 (IXindirect 0x10) B)
    , TC "RES 3,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0x99      ] (RESidx 3 (IXindirect 0x11) C)
    , TC "RES 3,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0x9a      ] (RESidx 3 (IXindirect 0x12) D)
    , TC "RES 3,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0x9b      ] (RESidx 3 (IXindirect 0x13) E)
    , TC "RES 3,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0x9c      ] (RESidx 3 (IXindirect 0x14) H)
    , TC "RES 3,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0x9d      ] (RESidx 3 (IXindirect 0x15) L)
    , TC "RES 3,(IX+d)        " [0xdd, 0xCB, 0x16, 0x9e      ] (RES 3 (IXindirect 0x16))
    , TC "RES 3,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0x9f      ] (RESidx 3 (IXindirect 0x17) A)
    , TC "RES 4,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xa0      ] (RESidx 4 (IXindirect 0x10) B)
    , TC "RES 4,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xa1      ] (RESidx 4 (IXindirect 0x11) C)
    , TC "RES 4,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xa2      ] (RESidx 4 (IXindirect 0x12) D)
    , TC "RES 4,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xa3      ] (RESidx 4 (IXindirect 0x13) E)
    , TC "RES 4,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xa4      ] (RESidx 4 (IXindirect 0x14) H)
    , TC "RES 4,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xa5      ] (RESidx 4 (IXindirect 0x15) L)
    , TC "RES 4,(IX+d)        " [0xdd, 0xCB, 0x16, 0xa6      ] (RES 4 (IXindirect 0x16))
    , TC "RES 4,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xa7      ] (RESidx 4 (IXindirect 0x17) A)
    , TC "RES 5,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xa8      ] (RESidx 5 (IXindirect 0x10) B)
    , TC "RES 5,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xa9      ] (RESidx 5 (IXindirect 0x11) C)
    , TC "RES 5,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xaa      ] (RESidx 5 (IXindirect 0x12) D)
    , TC "RES 5,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xab      ] (RESidx 5 (IXindirect 0x13) E)
    , TC "RES 5,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xac      ] (RESidx 5 (IXindirect 0x14) H)
    , TC "RES 5,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xad      ] (RESidx 5 (IXindirect 0x15) L)
    , TC "RES 5,(IX+d)        " [0xdd, 0xCB, 0x16, 0xae      ] (RES 5 (IXindirect 0x16))
    , TC "RES 5,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xaf      ] (RESidx 5 (IXindirect 0x17) A)
    , TC "RES 6,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xb0      ] (RESidx 6 (IXindirect 0x10) B)
    , TC "RES 6,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xb1      ] (RESidx 6 (IXindirect 0x11) C)
    , TC "RES 6,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xb2      ] (RESidx 6 (IXindirect 0x12) D)
    , TC "RES 6,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xb3      ] (RESidx 6 (IXindirect 0x13) E)
    , TC "RES 6,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xb4      ] (RESidx 6 (IXindirect 0x14) H)
    , TC "RES 6,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xb5      ] (RESidx 6 (IXindirect 0x15) L)
    , TC "RES 6,(IX+d)        " [0xdd, 0xCB, 0x16, 0xb6      ] (RES 6 (IXindirect 0x16))
    , TC "RES 6,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xb7      ] (RESidx 6 (IXindirect 0x17) A)
    , TC "RES 7,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xb8      ] (RESidx 7 (IXindirect 0x10) B)
    , TC "RES 7,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xb9      ] (RESidx 7 (IXindirect 0x11) C)
    , TC "RES 7,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xba      ] (RESidx 7 (IXindirect 0x12) D)
    , TC "RES 7,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xbb      ] (RESidx 7 (IXindirect 0x13) E)
    , TC "RES 7,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xbc      ] (RESidx 7 (IXindirect 0x14) H)
    , TC "RES 7,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xbd      ] (RESidx 7 (IXindirect 0x15) L)
    , TC "RES 7,(IX+d)        " [0xdd, 0xCB, 0x16, 0xbe      ] (RES 7 (IXindirect 0x16))
    , TC "RES 7,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xbf      ] (RESidx 7 (IXindirect 0x17) A)
    , TC "SET 0,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xc0      ] (SETidx 0 (IXindirect 0x10) B)
    , TC "SET 0,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xc1      ] (SETidx 0 (IXindirect 0x11) C)
    , TC "SET 0,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xc2      ] (SETidx 0 (IXindirect 0x12) D)
    , TC "SET 0,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xc3      ] (SETidx 0 (IXindirect 0x13) E)
    , TC "SET 0,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xc4      ] (SETidx 0 (IXindirect 0x14) H)
    , TC "SET 0,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xc5      ] (SETidx 0 (IXindirect 0x15) L)
    , TC "SET 0,(IX+d)        " [0xdd, 0xCB, 0x16, 0xc6      ] (SET 0 (IXindirect 0x16))
    , TC "SET 0,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xc7      ] (SETidx 0 (IXindirect 0x17) A)
    , TC "SET 1,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xc8      ] (SETidx 1 (IXindirect 0x10) B)
    , TC "SET 1,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xc9      ] (SETidx 1 (IXindirect 0x11) C)
    , TC "SET 1,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xca      ] (SETidx 1 (IXindirect 0x12) D)
    , TC "SET 1,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xcb      ] (SETidx 1 (IXindirect 0x13) E)
    , TC "SET 1,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xcc      ] (SETidx 1 (IXindirect 0x14) H)
    , TC "SET 1,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xcd      ] (SETidx 1 (IXindirect 0x15) L)
    , TC "SET 1,(IX+d)        " [0xdd, 0xCB, 0x16, 0xce      ] (SET 1 (IXindirect 0x16))
    , TC "SET 1,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xcf      ] (SETidx 1 (IXindirect 0x17) A)
    , TC "SET 2,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xd0      ] (SETidx 2 (IXindirect 0x10) B)
    , TC "SET 2,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xd1      ] (SETidx 2 (IXindirect 0x11) C)
    , TC "SET 2,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xd2      ] (SETidx 2 (IXindirect 0x12) D)
    , TC "SET 2,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xd3      ] (SETidx 2 (IXindirect 0x13) E)
    , TC "SET 2,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xd4      ] (SETidx 2 (IXindirect 0x14) H)
    , TC "SET 2,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xd5      ] (SETidx 2 (IXindirect 0x15) L)
    , TC "SET 2,(IX+d)        " [0xdd, 0xCB, 0x16, 0xd6      ] (SET 2 (IXindirect 0x16))
    , TC "SET 2,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xd7      ] (SETidx 2 (IXindirect 0x17) A)
    , TC "SET 3,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xd8      ] (SETidx 3 (IXindirect 0x10) B)
    , TC "SET 3,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xd9      ] (SETidx 3 (IXindirect 0x11) C)
    , TC "SET 3,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xda      ] (SETidx 3 (IXindirect 0x12) D)
    , TC "SET 3,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xdb      ] (SETidx 3 (IXindirect 0x13) E)
    , TC "SET 3,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xdc      ] (SETidx 3 (IXindirect 0x14) H)
    , TC "SET 3,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xdd      ] (SETidx 3 (IXindirect 0x15) L)
    , TC "SET 3,(IX+d)        " [0xdd, 0xCB, 0x16, 0xde      ] (SET 3 (IXindirect 0x16))
    , TC "SET 3,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xdf      ] (SETidx 3 (IXindirect 0x17) A)
    , TC "SET 4,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xe0      ] (SETidx 4 (IXindirect 0x10) B)
    , TC "SET 4,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xe1      ] (SETidx 4 (IXindirect 0x11) C)
    , TC "SET 4,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xe2      ] (SETidx 4 (IXindirect 0x12) D)
    , TC "SET 4,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xe3      ] (SETidx 4 (IXindirect 0x13) E)
    , TC "SET 4,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xe4      ] (SETidx 4 (IXindirect 0x14) H)
    , TC "SET 4,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xe5      ] (SETidx 4 (IXindirect 0x15) L)
    , TC "SET 4,(IX+d)        " [0xdd, 0xCB, 0x16, 0xe6      ] (SET 4 (IXindirect 0x16))
    , TC "SET 4,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xe7      ] (SETidx 4 (IXindirect 0x17) A)
    , TC "SET 5,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xe8      ] (SETidx 5 (IXindirect 0x10) B)
    , TC "SET 5,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xe9      ] (SETidx 5 (IXindirect 0x11) C)
    , TC "SET 5,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xea      ] (SETidx 5 (IXindirect 0x12) D)
    , TC "SET 5,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xeb      ] (SETidx 5 (IXindirect 0x13) E)
    , TC "SET 5,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xec      ] (SETidx 5 (IXindirect 0x14) H)
    , TC "SET 5,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xed      ] (SETidx 5 (IXindirect 0x15) L)
    , TC "SET 5,(IX+d)        " [0xdd, 0xCB, 0x16, 0xee      ] (SET 5 (IXindirect 0x16))
    , TC "SET 5,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xef      ] (SETidx 5 (IXindirect 0x17) A)
    , TC "SET 6,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xf0      ] (SETidx 6 (IXindirect 0x10) B)
    , TC "SET 6,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xf1      ] (SETidx 6 (IXindirect 0x11) C)
    , TC "SET 6,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xf2      ] (SETidx 6 (IXindirect 0x12) D)
    , TC "SET 6,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xf3      ] (SETidx 6 (IXindirect 0x13) E)
    , TC "SET 6,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xf4      ] (SETidx 6 (IXindirect 0x14) H)
    , TC "SET 6,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xf5      ] (SETidx 6 (IXindirect 0x15) L)
    , TC "SET 6,(IX+d)        " [0xdd, 0xCB, 0x16, 0xf6      ] (SET 6 (IXindirect 0x16))
    , TC "SET 6,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xf7      ] (SETidx 6 (IXindirect 0x17) A)
    , TC "SET 7,(IX+d)->B     " [0xdd, 0xCB, 0x10, 0xf8      ] (SETidx 7 (IXindirect 0x10) B)
    , TC "SET 7,(IX+d)->C     " [0xdd, 0xCB, 0x11, 0xf9      ] (SETidx 7 (IXindirect 0x11) C)
    , TC "SET 7,(IX+d)->D     " [0xdd, 0xCB, 0x12, 0xfa      ] (SETidx 7 (IXindirect 0x12) D)
    , TC "SET 7,(IX+d)->E     " [0xdd, 0xCB, 0x13, 0xfb      ] (SETidx 7 (IXindirect 0x13) E)
    , TC "SET 7,(IX+d)->H     " [0xdd, 0xCB, 0x14, 0xfc      ] (SETidx 7 (IXindirect 0x14) H)
    , TC "SET 7,(IX+d)->L     " [0xdd, 0xCB, 0x15, 0xfd      ] (SETidx 7 (IXindirect 0x15) L)
    , TC "SET 7,(IX+d)        " [0xdd, 0xCB, 0x16, 0xfe      ] (SET 7 (IXindirect 0x16))
    , TC "SET 7,(IX+d)->A     " [0xdd, 0xCB, 0x17, 0xff      ] (SETidx 7 (IXindirect 0x17) A)
    , TC "0xdd CALL Z,NN      " [0xdd, 0xCC, 0x56, 0x78      ] (CALLCC Z (mkAbstractAddr 0x7856))
    , TC "0xdd CALL NN        " [0xdd, 0xCD, 0x9a, 0xbc      ] (CALL (mkAbstractAddr 0xbc9a))
    , TC "0xdd ADC A,N        " [0xdd, 0xCE, 0xde            ] (ADC (ALUimm 0xde))
    , TC "0xdd RST 8H         " [0xdd, 0xCF                  ] (RST 8)
    , TC "0xdd RET NC         " [0xdd, 0xD0                  ] (RETCC NC)
    , TC "0xdd POP DE         " [0xdd, 0xD1                  ] (POP (AFPair16 DE))
    , TC "0xdd JP NC,$+3      " [0xdd, 0xD2, 0xdd, 0xcc      ] (JPCC NC  (mkAbstractAddr 0xccdd))
    , TC "0xdd OUT (N),A      " [0xdd, 0xD3, 0x0f            ] (OUT (PortImm 0x0f))
    , TC "0xdd CALL NC,NN     " [0xdd, 0xD4, 0x12, 0x34      ] (CALLCC NC (mkAbstractAddr 0x3412))
    , TC "0xdd PUSH DE        " [0xdd, 0xD5                  ] (PUSH (AFPair16 DE))
    , TC "0xdd SUB N          " [0xdd, 0xD6, 0x9a            ] (SUB (ALUimm 0x9a))
    , TC "0xdd RST 10H        " [0xdd, 0xD7                  ] (RST 0x10)
    , TC "0xdd RET C          " [0xdd, 0xD8                  ] (RETCC CY)
    , TC "0xdd EXX            " [0xdd, 0xD9                  ] (EXC Primes)
    , TC "0xdd JP C,$+3       " [0xdd, 0xDA, 0x54, 0xa4      ] (JPCC CY (mkAbstractAddr 0xa454))
    , TC "0xdd IN A,(N)       " [0xdd, 0xDB, 0xbc            ] (IN (PortImm 0xbc))
    , TC "0xdd CALL C,NN      " [0xdd, 0xDC, 0xde, 0x0f      ] (CALLCC CY (mkAbstractAddr 0x0fde))
    , TC "0xdd SBC A,N        " [0xdd, 0xDE, 0x56            ] (SBC (ALUimm 0x56))
    , TC "0xdd RST 18H        " [0xdd, 0xDF                  ] (RST 0x18)
    , TC "0xdd RET PO         " [0xdd, 0xE0                  ] (RETCC PO)
    , TC "POP IX              " [0xDD, 0xE1                  ] (POP (AFPair16 IX))
    , TC "0xdd JP PO,$+3      " [0xdd, 0xE2, 0x03, 0x61      ] (JPCC PO (mkAbstractAddr 0x6103))
    , TC "EX (SP),IX          " [0xDD, 0xE3                  ] (EXC SPIX)
    , TC "0xdd CALL PO,NN     " [0xdd, 0xE4, 0x78, 0x9a      ] (CALLCC PO (mkAbstractAddr 0x9a78))
    , TC "PUSH IX             " [0xDD, 0xE5                  ] (PUSH (AFPair16 IX))
    , TC "0xdd AND N          " [0xdd, 0xE6, 0xbc            ] (AND (ALUimm 0xbc))
    , TC "0xdd RST 20H        " [0xdd, 0xE7                  ] (RST 0x20)
    , TC "0xdd RET PE         " [0xdd, 0xE8                  ] (RETCC PE)
    , TC "JP (IX)             " [0xDD, 0xE9                  ] JPIX
    , TC "0xdd JP PE,$+3      " [0xdd, 0xEA, 0x35, 0x9f      ] (JPCC PE (mkAbstractAddr 0x9f35))
    , TC "0xdd EX DE,HL       " [0xdd, 0xEB                  ] (EXC DEHL)
    , TC "0xdd CALL PE,NN     " [0xdd, 0xEC, 0xde, 0x0f      ] (CALLCC PE (mkAbstractAddr 0x0fde))
    , TC "0xdd XOR N          " [0xdd, 0xEE, 0x12            ] (XOR (ALUimm 0x12))
    , TC "0xdd RST 28H        " [0xdd, 0xEF                  ] (RST 0x28)
    , TC "0xdd RET P          " [0xdd, 0xF0                  ] (RETCC POS)
    , TC "0xdd POP AF         " [0xdd, 0xF1                  ] (POP AF)
    , TC "0xdd JP P,$+3       " [0xdd, 0xF2, 0xcd, 0xab      ] (JPCC POS (mkAbstractAddr 0xabcd))
    , TC "0xdd DI             " [0xdd, 0xF3                  ] DI
    , TC "0xdd CALL P,NN      " [0xdd, 0xF4, 0x34, 0x56      ] (CALLCC POS (mkAbstractAddr 0x5634))
    , TC "0xdd PUSH AF        " [0xdd, 0xF5                  ] (PUSH AF)
    , TC "0xdd OR N           " [0xdd, 0xF6, 0x78            ] (OR (ALUimm 0x78))
    , TC "0xdd RST 30H        " [0xdd, 0xF7                  ] (RST 0x30)
    , TC "0xdd RET M          " [0xdd, 0xF8                  ] (RETCC MI)
    , TC "LD SP,IX            " [0xDD, 0xF9                  ] LDSPIX
    , TC "0xdd JP M,$+3       " [0xdd, 0xFA, 0x44, 0x99      ] (JPCC MI (mkAbstractAddr 0x9944))
    , TC "0xdd EI             " [0xdd, 0xFB                  ] EI
    , TC "0xdd CALL M,NN      " [0xdd, 0xFC, 0x9a, 0xbc      ] (CALLCC MI (mkAbstractAddr 0xbc9a))
    , TC "0xdd CP N           " [0xdd, 0xFE, 0xde            ] (CP (ALUimm 0xde))
    , TC "0xdd RST 38H        " [0xdd, 0xFF                  ] (RST 0x38)
    ]
  , TG "0xed prefix (Utility and extension instructions)"
    [ TC "0xed 0x00           " [0xed, 0x00                  ] (Z80undef $ UndefInsn [0xed, 0x00])
    , TC "0xed 0x01           " [0xed, 0x01                  ] (Z80undef $ UndefInsn [0xed, 0x01])
    , TC "0xed 0x02           " [0xed, 0x02                  ] (Z80undef $ UndefInsn [0xed, 0x02])
    , TC "0xed 0x03           " [0xed, 0x03                  ] (Z80undef $ UndefInsn [0xed, 0x03])
    , TC "0xed 0x04           " [0xed, 0x04                  ] (Z80undef $ UndefInsn [0xed, 0x04])
    , TC "0xed 0x05           " [0xed, 0x05                  ] (Z80undef $ UndefInsn [0xed, 0x05])
    , TC "0xed 0x06           " [0xed, 0x06                  ] (Z80undef $ UndefInsn [0xed, 0x06])
    , TC "0xed 0x07           " [0xed, 0x07                  ] (Z80undef $ UndefInsn [0xed, 0x07])
    , TC "0xed 0x08           " [0xed, 0x08                  ] (Z80undef $ UndefInsn [0xed, 0x08])
    , TC "0xed 0x09           " [0xed, 0x09                  ] (Z80undef $ UndefInsn [0xed, 0x09])
    , TC "0xed 0x0a           " [0xed, 0x0a                  ] (Z80undef $ UndefInsn [0xed, 0x0a])
    , TC "0xed 0x0b           " [0xed, 0x0b                  ] (Z80undef $ UndefInsn [0xed, 0x0b])
    , TC "0xed 0x0c           " [0xed, 0x0c                  ] (Z80undef $ UndefInsn [0xed, 0x0c])
    , TC "0xed 0x0d           " [0xed, 0x0d                  ] (Z80undef $ UndefInsn [0xed, 0x0d])
    , TC "0xed 0x0e           " [0xed, 0x0e                  ] (Z80undef $ UndefInsn [0xed, 0x0e])
    , TC "0xed 0x0f           " [0xed, 0x0f                  ] (Z80undef $ UndefInsn [0xed, 0x0f])
    , TC "0xed 0x10           " [0xed, 0x10                  ] (Z80undef $ UndefInsn [0xed, 0x10])
    , TC "0xed 0x11           " [0xed, 0x11                  ] (Z80undef $ UndefInsn [0xed, 0x11])
    , TC "0xed 0x12           " [0xed, 0x12                  ] (Z80undef $ UndefInsn [0xed, 0x12])
    , TC "0xed 0x13           " [0xed, 0x13                  ] (Z80undef $ UndefInsn [0xed, 0x13])
    , TC "0xed 0x14           " [0xed, 0x14                  ] (Z80undef $ UndefInsn [0xed, 0x14])
    , TC "0xed 0x15           " [0xed, 0x15                  ] (Z80undef $ UndefInsn [0xed, 0x15])
    , TC "0xed 0x16           " [0xed, 0x16                  ] (Z80undef $ UndefInsn [0xed, 0x16])
    , TC "0xed 0x17           " [0xed, 0x17                  ] (Z80undef $ UndefInsn [0xed, 0x17])
    , TC "0xed 0x18           " [0xed, 0x18                  ] (Z80undef $ UndefInsn [0xed, 0x18])
    , TC "0xed 0x19           " [0xed, 0x19                  ] (Z80undef $ UndefInsn [0xed, 0x19])
    , TC "0xed 0x1a           " [0xed, 0x1a                  ] (Z80undef $ UndefInsn [0xed, 0x1a])
    , TC "0xed 0x1b           " [0xed, 0x1b                  ] (Z80undef $ UndefInsn [0xed, 0x1b])
    , TC "0xed 0x1c           " [0xed, 0x1c                  ] (Z80undef $ UndefInsn [0xed, 0x1c])
    , TC "0xed 0x1d           " [0xed, 0x1d                  ] (Z80undef $ UndefInsn [0xed, 0x1d])
    , TC "0xed 0x1e           " [0xed, 0x1e                  ] (Z80undef $ UndefInsn [0xed, 0x1e])
    , TC "0xed 0x1f           " [0xed, 0x1f                  ] (Z80undef $ UndefInsn [0xed, 0x1f])
    , TC "0xed 0x20           " [0xed, 0x20                  ] (Z80undef $ UndefInsn [0xed, 0x20])
    , TC "0xed 0x21           " [0xed, 0x21                  ] (Z80undef $ UndefInsn [0xed, 0x21])
    , TC "0xed 0x22           " [0xed, 0x22                  ] (Z80undef $ UndefInsn [0xed, 0x22])
    , TC "0xed 0x23           " [0xed, 0x23                  ] (Z80undef $ UndefInsn [0xed, 0x23])
    , TC "0xed 0x24           " [0xed, 0x24                  ] (Z80undef $ UndefInsn [0xed, 0x24])
    , TC "0xed 0x25           " [0xed, 0x25                  ] (Z80undef $ UndefInsn [0xed, 0x25])
    , TC "0xed 0x26           " [0xed, 0x26                  ] (Z80undef $ UndefInsn [0xed, 0x26])
    , TC "0xed 0x27           " [0xed, 0x27                  ] (Z80undef $ UndefInsn [0xed, 0x27])
    , TC "0xed 0x28           " [0xed, 0x28                  ] (Z80undef $ UndefInsn [0xed, 0x28])
    , TC "0xed 0x29           " [0xed, 0x29                  ] (Z80undef $ UndefInsn [0xed, 0x29])
    , TC "0xed 0x2a           " [0xed, 0x2a                  ] (Z80undef $ UndefInsn [0xed, 0x2a])
    , TC "0xed 0x2b           " [0xed, 0x2b                  ] (Z80undef $ UndefInsn [0xed, 0x2b])
    , TC "0xed 0x2c           " [0xed, 0x2c                  ] (Z80undef $ UndefInsn [0xed, 0x2c])
    , TC "0xed 0x2d           " [0xed, 0x2d                  ] (Z80undef $ UndefInsn [0xed, 0x2d])
    , TC "0xed 0x2e           " [0xed, 0x2e                  ] (Z80undef $ UndefInsn [0xed, 0x2e])
    , TC "0xed 0x2f           " [0xed, 0x2f                  ] (Z80undef $ UndefInsn [0xed, 0x2f])
    , TC "0xed 0x30           " [0xed, 0x30                  ] (Z80undef $ UndefInsn [0xed, 0x30])
    , TC "0xed 0x31           " [0xed, 0x31                  ] (Z80undef $ UndefInsn [0xed, 0x31])
    , TC "0xed 0x32           " [0xed, 0x32                  ] (Z80undef $ UndefInsn [0xed, 0x32])
    , TC "0xed 0x33           " [0xed, 0x33                  ] (Z80undef $ UndefInsn [0xed, 0x33])
    , TC "0xed 0x34           " [0xed, 0x34                  ] (Z80undef $ UndefInsn [0xed, 0x34])
    , TC "0xed 0x35           " [0xed, 0x35                  ] (Z80undef $ UndefInsn [0xed, 0x35])
    , TC "0xed 0x36           " [0xed, 0x36                  ] (Z80undef $ UndefInsn [0xed, 0x36])
    , TC "0xed 0x37           " [0xed, 0x37                  ] (Z80undef $ UndefInsn [0xed, 0x37])
    , TC "0xed 0x38           " [0xed, 0x38                  ] (Z80undef $ UndefInsn [0xed, 0x38])
    , TC "0xed 0x39           " [0xed, 0x39                  ] (Z80undef $ UndefInsn [0xed, 0x39])
    , TC "0xed 0x3a           " [0xed, 0x3a                  ] (Z80undef $ UndefInsn [0xed, 0x3a])
    , TC "0xed 0x3b           " [0xed, 0x3b                  ] (Z80undef $ UndefInsn [0xed, 0x3b])
    , TC "0xed 0x3c           " [0xed, 0x3c                  ] (Z80undef $ UndefInsn [0xed, 0x3c])
    , TC "0xed 0x3d           " [0xed, 0x3d                  ] (Z80undef $ UndefInsn [0xed, 0x3d])
    , TC "0xed 0x3e           " [0xed, 0x3e                  ] (Z80undef $ UndefInsn [0xed, 0x3e])
    , TC "0xed 0x3f           " [0xed, 0x3f                  ] (Z80undef $ UndefInsn [0xed, 0x3f])
    , TC "IN B,(C)            " [0xED, 0x40                  ] (IN (CIndIO B))
    , TC "OUT (C),B           " [0xED, 0x41                  ] (OUT (CIndIO B))
    , TC "SBC HL,BC           " [0xED, 0x42                  ] (SBC16 $ DestHL (RPair16 BC))
    , TC "LD (NN),BC          " [0xED, 0x43, 0x9a, 0xbc      ] (LD16 (FromReg16 (RPair16 BC) (mkAbstractAddr 0xbc9a)))
    , TC "NEG                 " [0xED, 0x44                  ] NEG
    , TC "RETN                " [0xED, 0x45                  ] RETN
    , TC "IM 0                " [0xED, 0x46                  ] (IM 0)
    , TC "LD I,A              " [0xED, 0x47                  ] (LD FromAtoI)
    , TC "IN C,(C)            " [0xED, 0x48                  ] (IN (CIndIO C))
    , TC "OUT (C),C           " [0xED, 0x49                  ] (OUT (CIndIO C))
    , TC "ADC HL,BC           " [0xED, 0x4A                  ] (ADC16 $ DestHL (RPair16 BC))
    , TC "LD BC,(NN)          " [0xED, 0x4B, 0xde, 0x0f      ] (LD16 (ToReg16 (RPair16 BC) (mkAbstractAddr 0x0fde)))
    , TC "NEG                 " [0xED, 0x4C                  ] NEG
    , TC "RETI                " [0xED, 0x4D                  ] RETI
    , TC "IM 0                " [0xED, 0x4E                  ] (IM 0)
    , TC "LD R,A              " [0xED, 0x4F                  ] (LD FromAtoR)
    , TC "IN D,(C)            " [0xED, 0x50                  ] (IN (CIndIO D))
    , TC "OUT (C),D           " [0xED, 0x51                  ] (OUT (CIndIO D))
    , TC "SBC HL,DE           " [0xED, 0x52                  ] (SBC16 $ DestHL (RPair16 DE))
    , TC "LD (NN),DE          " [0xED, 0x53, 0x12, 0x34      ] (LD16 (FromReg16 (RPair16 DE) (mkAbstractAddr 0x3412)))
    , TC "NEG                 " [0xED, 0x54                  ] NEG
    , TC "RETN                " [0xED, 0x55                  ] RETN
    , TC "IM 1                " [0xED, 0x56                  ] (IM 1)
    , TC "LD A,I              " [0xED, 0x57                  ] (LD FromItoA)
    , TC "IN E,(C)            " [0xED, 0x58                  ] (IN (CIndIO E))
    , TC "OUT (C),E           " [0xED, 0x59                  ] (OUT (CIndIO E))
    , TC "ADC HL,DE           " [0xED, 0x5A                  ] (ADC16 $ DestHL (RPair16 DE))
    , TC "LD DE,(NN)          " [0xED, 0x5B, 0x56, 0x78      ] (LD16 (ToReg16 (RPair16 DE) (mkAbstractAddr 0x7856)))
    , TC "NEG                 " [0xED, 0x5C                  ] NEG
    , TC "RETI                " [0xED, 0x5D                  ] RETI
    , TC "IM 2                " [0xED, 0x5E                  ] (IM 2)
    , TC "LD A,R              " [0xED, 0x5F                  ] (LD FromRtoA)
    , TC "IN H,(C)            " [0xED, 0x60                  ] (IN (CIndIO H))
    , TC "OUT (C),H           " [0xED, 0x61                  ] (OUT (CIndIO H))
    , TC "SBC HL,HL           " [0xED, 0x62                  ] (SBC16 $ DestHL (RPair16 HL))
    , TC "LD (NN),HL          " [0xED, 0x63, 0x9a, 0xbc      ] (LD16 (FromReg16 (RPair16 HL) (mkAbstractAddr 0xbc9a)))
    , TC "NEG                 " [0xED, 0x64                  ] NEG
    , TC "RETN                " [0xED, 0x65                  ] RETN
    , TC "IM 0                " [0xED, 0x66                  ] (IM 0)
    , TC "RRD                 " [0xED, 0x67                  ] RRD
    , TC "IN L,(C)            " [0xED, 0x68                  ] (IN (CIndIO L))
    , TC "OUT (C),L           " [0xED, 0x69                  ] (OUT (CIndIO L))
    , TC "ADC HL,HL           " [0xED, 0x6A                  ] (ADC16 $ DestHL (RPair16 HL))
    , TC "LD HL,(NN)          " [0xED, 0x6B, 0x9a, 0xbc      ] (LD16 (ToReg16 (RPair16 HL) (mkAbstractAddr 0xbc9a)))
    , TC "NEG                 " [0xED, 0x6C                  ] NEG
    , TC "RETI                " [0xED, 0x6D                  ] RETI
    , TC "IM 0                " [0xED, 0x6E                  ] (IM 0)
    , TC "RLD                 " [0xED, 0x6F                  ] RLD
    , TC "IN (C)              " [0xED, 0x70                  ] (IN CIndIO0)
    , TC "OUT (C),0           " [0xED, 0x71                  ] (OUT CIndIO0)
    , TC "SBC HL,SP           " [0xED, 0x72                  ] (SBC16 $ DestHL SP)
    , TC "LD (NN),SP          " [0xED, 0x73, 0x9a, 0xbc      ] (LD16 (FromReg16 SP (mkAbstractAddr 0xbc9a)))
    , TC "NEG                 " [0xED, 0x74                  ] NEG
    , TC "RETN                " [0xED, 0x75                  ] RETN
    , TC "IM 1                " [0xED, 0x76                  ] (IM 1)
    , TC "0xed 0x77           " [0xED, 0x77                  ] (Z80undef $ UndefInsn [0xed, 0x77])
    , TC "IN A,(C)            " [0xED, 0x78                  ] (IN (CIndIO A))
    , TC "OUT (C),A           " [0xED, 0x79                  ] (OUT (CIndIO A))
    , TC "ADC HL,SP           " [0xED, 0x7A                  ] (ADC16 $ DestHL SP)
    , TC "LD SP,(NN)          " [0xED, 0x7B, 0xde, 0x0f      ] (LD16 (ToReg16 SP (mkAbstractAddr 0x0fde)))
    , TC "NEG                 " [0xED, 0x7C                  ] NEG
    , TC "RETI                " [0xED, 0x7D                  ] RETI
    , TC "IM 2                " [0xED, 0x7E                  ] (IM 2)
    , TC "0xed 0x7f           " [0xED, 0x7F                  ] (Z80undef $ UndefInsn [0xed, 0x7F])
    , TC "0xed 0x80           " [0xed, 0x80                  ] (Z80undef $ UndefInsn [0xed, 0x80])
    , TC "0xed 0x81           " [0xed, 0x81                  ] (Z80undef $ UndefInsn [0xed, 0x81])
    , TC "0xed 0x82           " [0xed, 0x82                  ] (Z80undef $ UndefInsn [0xed, 0x82])
    , TC "0xed 0x83           " [0xed, 0x83                  ] (Z80undef $ UndefInsn [0xed, 0x83])
    , TC "0xed 0x84           " [0xed, 0x84                  ] (Z80undef $ UndefInsn [0xed, 0x84])
    , TC "0xed 0x85           " [0xed, 0x85                  ] (Z80undef $ UndefInsn [0xed, 0x85])
    , TC "0xed 0x86           " [0xed, 0x86                  ] (Z80undef $ UndefInsn [0xed, 0x86])
    , TC "0xed 0x87           " [0xed, 0x87                  ] (Z80undef $ UndefInsn [0xed, 0x87])
    , TC "0xed 0x88           " [0xed, 0x88                  ] (Z80undef $ UndefInsn [0xed, 0x88])
    , TC "0xed 0x89           " [0xed, 0x89                  ] (Z80undef $ UndefInsn [0xed, 0x89])
    , TC "0xed 0x8a           " [0xed, 0x8a                  ] (Z80undef $ UndefInsn [0xed, 0x8a])
    , TC "0xed 0x8b           " [0xed, 0x8b                  ] (Z80undef $ UndefInsn [0xed, 0x8b])
    , TC "0xed 0x8c           " [0xed, 0x8c                  ] (Z80undef $ UndefInsn [0xed, 0x8c])
    , TC "0xed 0x8d           " [0xed, 0x8d                  ] (Z80undef $ UndefInsn [0xed, 0x8d])
    , TC "0xed 0x8e           " [0xed, 0x8e                  ] (Z80undef $ UndefInsn [0xed, 0x8e])
    , TC "0xed 0x8f           " [0xed, 0x8f                  ] (Z80undef $ UndefInsn [0xed, 0x8f])
    , TC "0xed 0x90           " [0xed, 0x90                  ] (Z80undef $ UndefInsn [0xed, 0x90])
    , TC "0xed 0x91           " [0xed, 0x91                  ] (Z80undef $ UndefInsn [0xed, 0x91])
    , TC "0xed 0x92           " [0xed, 0x92                  ] (Z80undef $ UndefInsn [0xed, 0x92])
    , TC "0xed 0x93           " [0xed, 0x93                  ] (Z80undef $ UndefInsn [0xed, 0x93])
    , TC "0xed 0x94           " [0xed, 0x94                  ] (Z80undef $ UndefInsn [0xed, 0x94])
    , TC "0xed 0x95           " [0xed, 0x95                  ] (Z80undef $ UndefInsn [0xed, 0x95])
    , TC "0xed 0x96           " [0xed, 0x96                  ] (Z80undef $ UndefInsn [0xed, 0x96])
    , TC "0xed 0x97           " [0xed, 0x97                  ] (Z80undef $ UndefInsn [0xed, 0x97])
    , TC "0xed 0x98           " [0xed, 0x98                  ] (Z80undef $ UndefInsn [0xed, 0x98])
    , TC "0xed 0x99           " [0xed, 0x99                  ] (Z80undef $ UndefInsn [0xed, 0x99])
    , TC "0xed 0x9a           " [0xed, 0x9a                  ] (Z80undef $ UndefInsn [0xed, 0x9a])
    , TC "0xed 0x9b           " [0xed, 0x9b                  ] (Z80undef $ UndefInsn [0xed, 0x9b])
    , TC "0xed 0x9c           " [0xed, 0x9c                  ] (Z80undef $ UndefInsn [0xed, 0x9c])
    , TC "0xed 0x9d           " [0xed, 0x9d                  ] (Z80undef $ UndefInsn [0xed, 0x9d])
    , TC "0xed 0x9e           " [0xed, 0x9e                  ] (Z80undef $ UndefInsn [0xed, 0x9e])
    , TC "0xed 0x9f           " [0xed, 0x9f                  ] (Z80undef $ UndefInsn [0xed, 0x9f])
    , TC "LDI                 " [0xED, 0xA0                  ] LDI
    , TC "CPI                 " [0xED, 0xA1                  ] CPI
    , TC "INI                 " [0xED, 0xA2                  ] INI
    , TC "OUTI                " [0xED, 0xA3                  ] OUTI
    , TC "0xed 0xa4           " [0xed, 0xa4                  ] (Z80undef $ UndefInsn [0xed, 0xa4])
    , TC "0xed 0xa5           " [0xed, 0xa5                  ] (Z80undef $ UndefInsn [0xed, 0xa5])
    , TC "0xed 0xa6           " [0xed, 0xa6                  ] (Z80undef $ UndefInsn [0xed, 0xa6])
    , TC "0xed 0xa7           " [0xed, 0xa7                  ] (Z80undef $ UndefInsn [0xed, 0xa7])
    , TC "LDD                 " [0xED, 0xA8                  ] LDD
    , TC "CPD                 " [0xED, 0xA9                  ] CPD
    , TC "IND                 " [0xED, 0xAA                  ] IND
    , TC "OUTD                " [0xED, 0xAB                  ] OUTD
    , TC "0xed 0xac           " [0xed, 0xac                  ] (Z80undef $ UndefInsn [0xed, 0xac])
    , TC "0xed 0xad           " [0xed, 0xad                  ] (Z80undef $ UndefInsn [0xed, 0xad])
    , TC "0xed 0xae           " [0xed, 0xae                  ] (Z80undef $ UndefInsn [0xed, 0xae])
    , TC "0xed 0xaf           " [0xed, 0xaf                  ] (Z80undef $ UndefInsn [0xed, 0xaf])
    , TC "LDIR                " [0xED, 0xB0                  ] LDIR
    , TC "CPIR                " [0xED, 0xB1                  ] CPIR
    , TC "INIR                " [0xED, 0xB2                  ] INIR
    , TC "OTIR                " [0xED, 0xB3                  ] OTIR
    , TC "0xed 0xb4           " [0xed, 0xb4                  ] (Z80undef $ UndefInsn [0xed, 0xb4])
    , TC "0xed 0xb5           " [0xed, 0xb5                  ] (Z80undef $ UndefInsn [0xed, 0xb5])
    , TC "0xed 0xb6           " [0xed, 0xb6                  ] (Z80undef $ UndefInsn [0xed, 0xb6])
    , TC "0xed 0xb7           " [0xed, 0xb7                  ] (Z80undef $ UndefInsn [0xed, 0xb7])
    , TC "LDDR                " [0xED, 0xB8                  ] LDDR
    , TC "CPDR                " [0xED, 0xB9                  ] CPDR
    , TC "INDR                " [0xED, 0xBA                  ] INDR
    , TC "OTDR                " [0xED, 0xBB                  ] OTDR
    , TC "0xed 0xbc           " [0xed, 0xbc                  ] (Z80undef $ UndefInsn [0xed, 0xbc])
    , TC "0xed 0xbd           " [0xed, 0xbd                  ] (Z80undef $ UndefInsn [0xed, 0xbd])
    , TC "0xed 0xbe           " [0xed, 0xbe                  ] (Z80undef $ UndefInsn [0xed, 0xbe])
    , TC "0xed 0xbf           " [0xed, 0xbf                  ] (Z80undef $ UndefInsn [0xed, 0xbf])
      , TC "0xed 0xc0           " [0xed, 0xc0                  ] (Z80undef $ UndefInsn [0xed, 0xc0])
    , TC "0xed 0xc1           " [0xed, 0xc1                  ] (Z80undef $ UndefInsn [0xed, 0xc1])
    , TC "0xed 0xc2           " [0xed, 0xc2                  ] (Z80undef $ UndefInsn [0xed, 0xc2])
    , TC "0xed 0xc3           " [0xed, 0xc3                  ] (Z80undef $ UndefInsn [0xed, 0xc3])
    , TC "0xed 0xc4           " [0xed, 0xc4                  ] (Z80undef $ UndefInsn [0xed, 0xc4])
    , TC "0xed 0xc5           " [0xed, 0xc5                  ] (Z80undef $ UndefInsn [0xed, 0xc5])
    , TC "0xed 0xc6           " [0xed, 0xc6                  ] (Z80undef $ UndefInsn [0xed, 0xc6])
    , TC "0xed 0xc7           " [0xed, 0xc7                  ] (Z80undef $ UndefInsn [0xed, 0xc7])
    , TC "0xed 0xc8           " [0xed, 0xc8                  ] (Z80undef $ UndefInsn [0xed, 0xc8])
    , TC "0xed 0xc9           " [0xed, 0xc9                  ] (Z80undef $ UndefInsn [0xed, 0xc9])
    , TC "0xed 0xca           " [0xed, 0xca                  ] (Z80undef $ UndefInsn [0xed, 0xca])
    , TC "0xed 0xcb           " [0xed, 0xcb                  ] (Z80undef $ UndefInsn [0xed, 0xcb])
    , TC "0xed 0xcc           " [0xed, 0xcc                  ] (Z80undef $ UndefInsn [0xed, 0xcc])
    , TC "0xed 0xcd           " [0xed, 0xcd                  ] (Z80undef $ UndefInsn [0xed, 0xcd])
    , TC "0xed 0xce           " [0xed, 0xce                  ] (Z80undef $ UndefInsn [0xed, 0xce])
    , TC "0xed 0xcf           " [0xed, 0xcf                  ] (Z80undef $ UndefInsn [0xed, 0xcf])
    , TC "0xed 0xd0           " [0xed, 0xd0                  ] (Z80undef $ UndefInsn [0xed, 0xd0])
    , TC "0xed 0xd1           " [0xed, 0xd1                  ] (Z80undef $ UndefInsn [0xed, 0xd1])
    , TC "0xed 0xd2           " [0xed, 0xd2                  ] (Z80undef $ UndefInsn [0xed, 0xd2])
    , TC "0xed 0xd3           " [0xed, 0xd3                  ] (Z80undef $ UndefInsn [0xed, 0xd3])
    , TC "0xed 0xd4           " [0xed, 0xd4                  ] (Z80undef $ UndefInsn [0xed, 0xd4])
    , TC "0xed 0xd5           " [0xed, 0xd5                  ] (Z80undef $ UndefInsn [0xed, 0xd5])
    , TC "0xed 0xd6           " [0xed, 0xd6                  ] (Z80undef $ UndefInsn [0xed, 0xd6])
    , TC "0xed 0xd7           " [0xed, 0xd7                  ] (Z80undef $ UndefInsn [0xed, 0xd7])
    , TC "0xed 0xd8           " [0xed, 0xd8                  ] (Z80undef $ UndefInsn [0xed, 0xd8])
    , TC "0xed 0xd9           " [0xed, 0xd9                  ] (Z80undef $ UndefInsn [0xed, 0xd9])
    , TC "0xed 0xda           " [0xed, 0xda                  ] (Z80undef $ UndefInsn [0xed, 0xda])
    , TC "0xed 0xdb           " [0xed, 0xdb                  ] (Z80undef $ UndefInsn [0xed, 0xdb])
    , TC "0xed 0xdc           " [0xed, 0xdc                  ] (Z80undef $ UndefInsn [0xed, 0xdc])
    , TC "0xed 0xdd           " [0xed, 0xdd                  ] (Z80undef $ UndefInsn [0xed, 0xdd])
    , TC "0xed 0xde           " [0xed, 0xde                  ] (Z80undef $ UndefInsn [0xed, 0xde])
    , TC "0xed 0xdf           " [0xed, 0xdf                  ] (Z80undef $ UndefInsn [0xed, 0xdf])
    , TC "0xed 0xe0           " [0xed, 0xe0                  ] (Z80undef $ UndefInsn [0xed, 0xe0])
    , TC "0xed 0xe1           " [0xed, 0xe1                  ] (Z80undef $ UndefInsn [0xed, 0xe1])
    , TC "0xed 0xe2           " [0xed, 0xe2                  ] (Z80undef $ UndefInsn [0xed, 0xe2])
    , TC "0xed 0xe3           " [0xed, 0xe3                  ] (Z80undef $ UndefInsn [0xed, 0xe3])
    , TC "0xed 0xe4           " [0xed, 0xe4                  ] (Z80undef $ UndefInsn [0xed, 0xe4])
    , TC "0xed 0xe5           " [0xed, 0xe5                  ] (Z80undef $ UndefInsn [0xed, 0xe5])
    , TC "0xed 0xe6           " [0xed, 0xe6                  ] (Z80undef $ UndefInsn [0xed, 0xe6])
    , TC "0xed 0xe7           " [0xed, 0xe7                  ] (Z80undef $ UndefInsn [0xed, 0xe7])
    , TC "0xed 0xe8           " [0xed, 0xe8                  ] (Z80undef $ UndefInsn [0xed, 0xe8])
    , TC "0xed 0xe9           " [0xed, 0xe9                  ] (Z80undef $ UndefInsn [0xed, 0xe9])
    , TC "0xed 0xea           " [0xed, 0xea                  ] (Z80undef $ UndefInsn [0xed, 0xea])
    , TC "0xed 0xeb           " [0xed, 0xeb                  ] (Z80undef $ UndefInsn [0xed, 0xeb])
    , TC "0xed 0xec           " [0xed, 0xec                  ] (Z80undef $ UndefInsn [0xed, 0xec])
    , TC "0xed 0xed           " [0xed, 0xed                  ] (Z80undef $ UndefInsn [0xed, 0xed])
    , TC "0xed 0xee           " [0xed, 0xee                  ] (Z80undef $ UndefInsn [0xed, 0xee])
    , TC "0xed 0xef           " [0xed, 0xef                  ] (Z80undef $ UndefInsn [0xed, 0xef])
    , TC "0xed 0xf0           " [0xed, 0xf0                  ] (Z80undef $ UndefInsn [0xed, 0xf0])
    , TC "0xed 0xf1           " [0xed, 0xf1                  ] (Z80undef $ UndefInsn [0xed, 0xf1])
    , TC "0xed 0xf2           " [0xed, 0xf2                  ] (Z80undef $ UndefInsn [0xed, 0xf2])
    , TC "0xed 0xf3           " [0xed, 0xf3                  ] (Z80undef $ UndefInsn [0xed, 0xf3])
    , TC "0xed 0xf4           " [0xed, 0xf4                  ] (Z80undef $ UndefInsn [0xed, 0xf4])
    , TC "0xed 0xf5           " [0xed, 0xf5                  ] (Z80undef $ UndefInsn [0xed, 0xf5])
    , TC "0xed 0xf6           " [0xed, 0xf6                  ] (Z80undef $ UndefInsn [0xed, 0xf6])
    , TC "0xed 0xf7           " [0xed, 0xf7                  ] (Z80undef $ UndefInsn [0xed, 0xf7])
    , TC "0xed 0xf8           " [0xed, 0xf8                  ] (Z80undef $ UndefInsn [0xed, 0xf8])
    , TC "0xed 0xf9           " [0xed, 0xf9                  ] (Z80undef $ UndefInsn [0xed, 0xf9])
    , TC "0xed 0xfa           " [0xed, 0xfa                  ] (Z80undef $ UndefInsn [0xed, 0xfa])
    , TC "0xed 0xfb           " [0xed, 0xfb                  ] (Z80undef $ UndefInsn [0xed, 0xfb])
    , TC "0xed 0xfc           " [0xed, 0xfc                  ] (Z80undef $ UndefInsn [0xed, 0xfc])
    , TC "0xed 0xfd           " [0xed, 0xfd                  ] (Z80undef $ UndefInsn [0xed, 0xfd])
    , TC "0xed 0xfe           " [0xed, 0xfe                  ] (Z80undef $ UndefInsn [0xed, 0xfe])
    , TC "0xed 0xff           " [0xed, 0xff                  ] (Z80undef $ UndefInsn [0xed, 0xff])
    ]
  , TG "0xfd prefix (IY-indexed instructions)"
    [ TC "0xfd NOP            " [0xfd, 0x00                  ] NOP
    , TC "0xfd LD BC,NN       " [0xfd, 0x01, 0x56, 0x78      ] (LD (Reg16Imm (RPair16 BC) (mkAbstractAddr 0x7856)))
    , TC "0xfd LD (BC),A      " [0xfd, 0x02                  ] (LD ToBCindirect)
    , TC "0xfd INC BC         " [0xfd, 0x03                  ] (INC (IncDecReg16 (RPair16 BC)))
    , TC "0xfd INC B          " [0xfd, 0x04                  ] (INC (IncDecReg8 B))
    , TC "0xfd DEC B          " [0xfd, 0x05                  ] (DEC (IncDecReg8 B))
    , TC "0xfd LD B,N         " [0xfd, 0x06, 0x9a            ] (LD (Reg8Imm B 0x9a))
    , TC "0xfd RLCA           " [0xfd, 0x07                  ] RLCA
    , TC "0xfd EX AF,AF'      " [0xfd, 0x08                  ] (EXC AFAF')
    , TC "ADD IY,BC           " [0xFD, 0x09                  ] (ADD16 $ DestIY (RPair16 BC))
    , TC "0xfd LD A,(BC)      " [0xfd, 0x0A                  ] (LD FromBCindirect)
    , TC "0xfd DEC BC         " [0xfd, 0x0B                  ] (DEC (IncDecReg16 (RPair16 BC)))
    , TC "0xfd INC C          " [0xfd, 0x0C                  ] (INC (IncDecReg8 C))
    , TC "0xfd DEC C          " [0xfd, 0x0D                  ] (DEC (IncDecReg8 C))
    , TC "0xfd LD C,N         " [0xfd, 0x0E, 0xbc            ] (LD (Reg8Imm C 0xbc))
    , TC "0xfd RRCA           " [0xfd, 0x0F                  ] RRCA
    , TC "0xfd DJNZ $+2       " [0xfd, 0x10, 0xfe            ] (DJNZ (mkAbstractAddr (1+ testOrigin)))
    , TC "0xfd LD DE,NN       " [0xfd, 0x11, 0xde, 0x0f      ] (LD (Reg16Imm (RPair16 DE) (mkAbstractAddr 0x0fde)))
    , TC "0xfd LD (DE),A      " [0xfd, 0x12                  ] (LD ToDEindirect)
    , TC "0xfd INC DE         " [0xfd, 0x13                  ] (INC (IncDecReg16 (RPair16 DE)))
    , TC "0xfd INC D          " [0xfd, 0x14                  ] (INC (IncDecReg8 D))
    , TC "0xfd DEC D          " [0xfd, 0x15                  ] (DEC (IncDecReg8 D))
    , TC "0xfd LD D,N         " [0xfd, 0x16, 0x12            ] (LD (Reg8Imm D 0x12))
    , TC "0xfd RLA            " [0xfd, 0x17                  ] RLA
    , TC "0xfd JR $+2         " [0xfd, 0x18, 0xfe            ] (JR (mkAbstractAddr (1+ testOrigin)))
    , TC "ADD IY,DE           " [0xfd, 0x19                  ] (ADD16 $ DestIY (RPair16 DE))
    , TC "0xfd LD A,(DE)      " [0xfd, 0x1A                  ] (LD FromDEindirect)
    , TC "0xfd DEC DE         " [0xfd, 0x1B                  ] (DEC (IncDecReg16 (RPair16 DE)))
    , TC "0xfd INC E          " [0xfd, 0x1C                  ] (INC (IncDecReg8 E))
    , TC "0xfd DEC E          " [0xfd, 0x1D                  ] (DEC (IncDecReg8 E))
    , TC "0xfd LD E,N         " [0xfd, 0x1E, 0x34            ] (LD (Reg8Imm E 0x34))
    , TC "0xfd RRA            " [0xfd, 0x1F                  ] RRA
    , TC "0xfd JR NZ,$+2      " [0xfd, 0x20, 0xfe            ] (JRCC NZ (mkAbstractAddr (1+ testOrigin)))
    , TC "LD IY,NN            " [0xFD, 0x21, 0x56, 0x78      ] (LD (Reg16Imm (RPair16 IY) (mkAbstractAddr 0x7856)))
    , TC "LD (NN),IY          " [0xfd, 0x22, 0x9a, 0xbc      ] (LD16 (FromReg16 (RPair16 IY) (mkAbstractAddr 0xbc9a)))
    , TC "INC IY              " [0xfd, 0x23                  ] (INC (IncDecReg16 (RPair16 IY)))
    , TC "INC IYh             " [0xfd, 0x24                  ] (INC (IncDecReg8 IYh))
    , TC "DEC IYh             " [0xfd, 0x25                  ] (DEC (IncDecReg8 IYh))
    , TC "LD IYh,N            " [0xfd, 0x26, 0xde            ] (LD (Reg8Imm IYh 0xde))
    , TC "0xfd DAA            " [0xfd, 0x27                  ] DAA
    , TC "0xfd JR Z,$+2       " [0xfd, 0x28, 0xfe            ] (JRCC Z (mkAbstractAddr (1+ testOrigin)))
    , TC "ADD IY,IY           " [0xFD, 0x29                  ] (ADD16 $ DestIY (RPair16 IY))
    , TC "LD IY,(NN)          " [0xFD, 0x2A, 0xde, 0x0f      ] (LD16 (ToReg16 (RPair16 IY) (mkAbstractAddr 0x0fde)))
    , TC "DEC IY              " [0xFD, 0x2B                  ] (DEC (IncDecReg16 (RPair16 IY)))
    , TC "INC IYl             " [0xfd, 0x2C                  ] (INC (IncDecReg8 IYl))
    , TC "DEC IYl             " [0xfd, 0x2D                  ] (DEC (IncDecReg8 IYl))
    , TC "LD IYl,N            " [0xfd, 0x2E, 0x34            ] (LD (Reg8Imm IYl 0x34))
    , TC "0xfd CPL            " [0xfd, 0x2F                  ] CPL
    , TC "0xfd JR NC,$+2      " [0xfd, 0x30, 0xfe            ] (JRCC NC (mkAbstractAddr (1+ testOrigin)))
    , TC "0xfd LD SP,NN       " [0xfd, 0x31, 0x56, 0x78      ] (LD (Reg16Imm SP (mkAbstractAddr 0x7856)))
    , TC "0xfd LD (NN),A      " [0xfd, 0x32, 0x9a, 0xbc      ] (LD (AccToMem (mkAbstractAddr 0xbc9a)))
    , TC "0xfd INC SP         " [0xfd, 0x33                  ] (INC (IncDecReg16 SP))
    , TC "INC (IY+N)          " [0xFD, 0x34, 0x12            ] (INC (IncDecReg8 (IYindirect 0x12)))
    , TC "DEC (IY+N)          " [0xFD, 0x35, 0x34            ] (DEC (IncDecReg8 (IYindirect 0x34)))
    , TC "LD (IY+N),N         " [0xFD, 0x36, 0x56, 0x78      ] (LD (Reg8Imm (IYindirect 0x56) 0x78))
    , TC "0xfd SCF            " [0xfd, 0x37                  ] SCF
    , TC "0xfd JR C,$+2       " [0xfd, 0x38, 0xfe            ] (JRCC CY (mkAbstractAddr (1+ testOrigin)))
    , TC "ADD IY,SP           " [0xfd, 0x39                  ] (ADD16 $ DestIY SP)
    , TC "0xfd LD A,(NN)      " [0xfd, 0x3A, 0x0f, 0x12      ] (LD (AccFromMem (mkAbstractAddr 0x120f)))
    , TC "0xfd DEC SP         " [0xfd, 0x3B                  ] (DEC (IncDecReg16 SP))
    , TC "0xfd INC A          " [0xfd, 0x3C                  ] (INC (IncDecReg8 A))
    , TC "0xfd DEC A          " [0xfd, 0x3D                  ] (DEC (IncDecReg8 A))
    , TC "0xfd LD A,N         " [0xfd, 0x3E, 0x34            ] (LD (Reg8Imm A 0x34))
    , TC "0xfd CCF            " [0xfd, 0x3F                  ] CCF
    , TC "0xfd LD B,B         " [0xfd, 0x40                  ] (LD (Reg8Reg8 B B))
    , TC "0xfd LD B,C         " [0xfd, 0x41                  ] (LD (Reg8Reg8 B C))
    , TC "0xfd LD B,D         " [0xfd, 0x42                  ] (LD (Reg8Reg8 B D))
    , TC "0xfd LD B,E         " [0xfd, 0x43                  ] (LD (Reg8Reg8 B E))
    , TC "LD B,IYh            " [0xfd, 0x44                  ] (LD (Reg8Reg8 B IYh))
    , TC "LD B,IYl            " [0xfd, 0x45                  ] (LD (Reg8Reg8 B IYl))
    , TC "LD B,(IY+N)         " [0xFD, 0x46, 0x9a            ] (LD (Reg8Reg8 B (IYindirect (negate 102))))
    , TC "0xfd LD B,A         " [0xfd, 0x47                  ] (LD (Reg8Reg8 B A))
    , TC "0xfd LD C,B         " [0xfd, 0x48                  ] (LD (Reg8Reg8 C B))
    , TC "0xfd LD C,C         " [0xfd, 0x49                  ] (LD (Reg8Reg8 C C))
    , TC "0xfd LD C,D         " [0xfd, 0x4A                  ] (LD (Reg8Reg8 C D))
    , TC "0xfd LD C,E         " [0xfd, 0x4B                  ] (LD (Reg8Reg8 C E))
    , TC "LD C,IYh            " [0xfd, 0x4C                  ] (LD (Reg8Reg8 C IYh))
    , TC "LD C,IYl            " [0xfd, 0x4D                  ] (LD (Reg8Reg8 C IYl))
    , TC "LD C,(IY+N)         " [0xFD, 0x4E, 0xbc            ] (LD (Reg8Reg8 C (IYindirect (negate 68))))
    , TC "0xfd LD C,A         " [0xfd, 0x4F                  ] (LD (Reg8Reg8 C A))
    , TC "0xfd LD D,B         " [0xfd, 0x50                  ] (LD (Reg8Reg8 D B))
    , TC "0xfd LD D,C         " [0xfd, 0x51                  ] (LD (Reg8Reg8 D C))
    , TC "0xfd LD D,D         " [0xfd, 0x52                  ] (LD (Reg8Reg8 D D))
    , TC "0xfd LD D,E         " [0xfd, 0x53                  ] (LD (Reg8Reg8 D E))
    , TC "LD D,IYh            " [0xfd, 0x54                  ] (LD (Reg8Reg8 D IYh))
    , TC "LD D,IYl            " [0xfd, 0x55                  ] (LD (Reg8Reg8 D IYl))
    , TC "LD D,(IY+N)         " [0xFD, 0x56, 0xde            ] (LD (Reg8Reg8 D (IYindirect (negate 34))))
    , TC "0xfd LD D,A         " [0xfd, 0x57                  ] (LD (Reg8Reg8 D A))
    , TC "0xfd LD E,B         " [0xfd, 0x58                  ] (LD (Reg8Reg8 E B))
    , TC "0xfd LD E,C         " [0xfd, 0x59                  ] (LD (Reg8Reg8 E C))
    , TC "0xfd LD E,D         " [0xfd, 0x5A                  ] (LD (Reg8Reg8 E D))
    , TC "0xfd LD E,E         " [0xfd, 0x5B                  ] (LD (Reg8Reg8 E E))
    , TC "LD E,IYh            " [0xfd, 0x5C                  ] (LD (Reg8Reg8 E IYh))
    , TC "LD E,IYl            " [0xfd, 0x5D                  ] (LD (Reg8Reg8 E IYl))
    , TC "LD E,(IY+N)         " [0xFD, 0x5E, 0x0f            ] (LD (Reg8Reg8 E (IYindirect 0x0f)))
    , TC "0xfd LD E,A         " [0xfd, 0x5F                  ] (LD (Reg8Reg8 E A))
    , TC "LD IYh,B            " [0xfd, 0x60                  ] (LD (Reg8Reg8 IYh B))
    , TC "LD IYh,C            " [0xfd, 0x61                  ] (LD (Reg8Reg8 IYh C))
    , TC "LD IYh,D            " [0xfd, 0x62                  ] (LD (Reg8Reg8 IYh D))
    , TC "LD IYh,E            " [0xfd, 0x63                  ] (LD (Reg8Reg8 IYh E))
    , TC "LD IYh,IYh          " [0xfd, 0x64                  ] (LD (Reg8Reg8 IYh IYh))
    , TC "LD IYh,IYl          " [0xfd, 0x65                  ] (LD (Reg8Reg8 IYh IYl))
    , TC "LD H,(IY+N)         " [0xFD, 0x66, 0x12            ] (LD (Reg8Reg8 H (IYindirect 0x12)))
    , TC "LD Ixh,A            " [0xfd, 0x67                  ] (LD (Reg8Reg8 IYh A))
    , TC "LD IYl,B            " [0xfd, 0x68                  ] (LD (Reg8Reg8 IYl B))
    , TC "LD IYl,C            " [0xfd, 0x69                  ] (LD (Reg8Reg8 IYl C))
    , TC "LD IYl,D            " [0xfd, 0x6A                  ] (LD (Reg8Reg8 IYl D))
    , TC "LD IYl,E            " [0xfd, 0x6B                  ] (LD (Reg8Reg8 IYl E))
    , TC "LD IYl,IYh          " [0xfd, 0x6C                  ] (LD (Reg8Reg8 IYl IYh))
    , TC "LD IYl,IYl          " [0xfd, 0x6D                  ] (LD (Reg8Reg8 IYl IYl))
    , TC "LD IYl,(IY+N)       " [0xFD, 0x6E, 0x34            ] (LD (Reg8Reg8 L   (IYindirect 0x34)))
    , TC "LD IYl,A            " [0xfd, 0x6F                  ] (LD (Reg8Reg8 IYl A))
    , TC "LD (IY+N),B         " [0xFD, 0x70, 0x56            ] (LD (Reg8Reg8 (IYindirect 0x56) B))
    , TC "LD (IY+N),C         " [0xFD, 0x71, 0x78            ] (LD (Reg8Reg8 (IYindirect 0x78) C))
    , TC "LD (IY+N),D         " [0xFD, 0x72, 0x9a            ] (LD (Reg8Reg8 (IYindirect (negate 102)) D))
    , TC "LD (IY+N),E         " [0xFD, 0x73, 0xbc            ] (LD (Reg8Reg8 (IYindirect (negate 68)) E))
    , TC "LD (IY+N),H         " [0xFD, 0x74, 0xde            ] (LD (Reg8Reg8 (IYindirect (negate 34)) H))
    , TC "LD (IY+N),L         " [0xFD, 0x75, 0x0f            ] (LD (Reg8Reg8 (IYindirect 0x0f) L))
    , TC "0xfd HALT           " [0xfd, 0x76                  ] HALT
    , TC "LD (IY+N),A         " [0xFD, 0x77, 0x12            ] (LD (Reg8Reg8 (IYindirect 0x12) A))
    , TC "0xfd LD A,B         " [0xfd, 0x78                  ] (LD (Reg8Reg8 A B))
    , TC "0xfd LD A,C         " [0xfd, 0x79                  ] (LD (Reg8Reg8 A C))
    , TC "0xfd LD A,D         " [0xfd, 0x7A                  ] (LD (Reg8Reg8 A D))
    , TC "0xfd LD A,E         " [0xfd, 0x7B                  ] (LD (Reg8Reg8 A E))
    , TC "LD A,IYh            " [0xfd, 0x7C                  ] (LD (Reg8Reg8 A IYh))
    , TC "LD A,IYl            " [0xfd, 0x7D                  ] (LD (Reg8Reg8 A IYl))
    , TC "LD A,(IY+N)         " [0xFD, 0x7E, 0x34            ] (LD (Reg8Reg8 A (IYindirect 0x34)))
    , TC "0xfd LD A,A         " [0xfd, 0x7F                  ] (LD (Reg8Reg8 A A))
    , TC "0xfd ADD A,B        " [0xfd, 0x80                  ] (ADD (ALUreg8 B))
    , TC "0xfd ADD A,C        " [0xfd, 0x81                  ] (ADD (ALUreg8 C))
    , TC "0xfd ADD A,D        " [0xfd, 0x82                  ] (ADD (ALUreg8 D))
    , TC "0xfd ADD A,E        " [0xfd, 0x83                  ] (ADD (ALUreg8 E))
    , TC "ADD A,IYh           " [0xfd, 0x84                  ] (ADD (ALUreg8 IYh))
    , TC "ADD A,IYl           " [0xfd, 0x85                  ] (ADD (ALUreg8 IYl))
    , TC "ADD A,(IY+N)        " [0xFD, 0x86, 0x56            ] (ADD (ALUreg8 (IYindirect 0x56)))
    , TC "0xfd ADD A,A        " [0xfd, 0x87                  ] (ADD (ALUreg8 A))
    , TC "0xfd ADC A,B        " [0xfd, 0x88                  ] (ADC (ALUreg8 B))
    , TC "0xfd ADC A,C        " [0xfd, 0x89                  ] (ADC (ALUreg8 C))
    , TC "0xfd ADC A,D        " [0xfd, 0x8A                  ] (ADC (ALUreg8 D))
    , TC "0xfd ADC A,E        " [0xfd, 0x8B                  ] (ADC (ALUreg8 E))
    , TC "0xfd ADC A,IYh      " [0xfd, 0x8C                  ] (ADC (ALUreg8 IYh))
    , TC "0xfd ADC A,IYl      " [0xfd, 0x8D                  ] (ADC (ALUreg8 IYl))
    , TC "ADC A,(IY+N)        " [0xFD, 0x8E, 0x78            ] (ADC (ALUreg8 (IYindirect 0x78)))
    , TC "0xfd ADC A,A        " [0xfd, 0x8F                  ] (ADC (ALUreg8 A))
    , TC "0xfd SUB B          " [0xfd, 0x90                  ] (SUB (ALUreg8 B))
    , TC "0xfd SUB C          " [0xfd, 0x91                  ] (SUB (ALUreg8 C))
    , TC "0xfd SUB D          " [0xfd, 0x92                  ] (SUB (ALUreg8 D))
    , TC "0xfd SUB E          " [0xfd, 0x93                  ] (SUB (ALUreg8 E))
    , TC "0xfd SUB IYh        " [0xfd, 0x94                  ] (SUB (ALUreg8 IYh))
    , TC "0xfd SUB IYl        " [0xfd, 0x95                  ] (SUB (ALUreg8 IYl))
    , TC "SUB (IY+N)          " [0xFD, 0x96, 0x9a            ] (SUB (ALUreg8 (IYindirect (negate 102))))
    , TC "0xfd SUB A          " [0xfd, 0x97                  ] (SUB (ALUreg8 A))
    , TC "0xfd SBC B          " [0xfd, 0x98                  ] (SBC (ALUreg8 B))
    , TC "0xfd SBC C          " [0xfd, 0x99                  ] (SBC (ALUreg8 C))
    , TC "0xfd SBC D          " [0xfd, 0x9A                  ] (SBC (ALUreg8 D))
    , TC "0xfd SBC E          " [0xfd, 0x9B                  ] (SBC (ALUreg8 E))
    , TC "0xfd SBC IYh        " [0xfd, 0x9C                  ] (SBC (ALUreg8 IYh))
    , TC "0xfd SBC IYl        " [0xfd, 0x9D                  ] (SBC (ALUreg8 IYl))
    , TC "SBC A,(IY+N)        " [0xFD, 0x9E, 0xbc            ] (SBC (ALUreg8 (IYindirect(negate 68))))
    , TC "0xfd SBC A          " [0xfd, 0x9F                  ] (SBC (ALUreg8 A))
    , TC "0xfd AND B          " [0xfd, 0xA0                  ] (AND (ALUreg8 B))
    , TC "0xfd AND C          " [0xfd, 0xA1                  ] (AND (ALUreg8 C))
    , TC "0xfd AND D          " [0xfd, 0xA2                  ] (AND (ALUreg8 D))
    , TC "0xfd AND E          " [0xfd, 0xA3                  ] (AND (ALUreg8 E))
    , TC "0xfd AND IYh        " [0xfd, 0xA4                  ] (AND (ALUreg8 IYh))
    , TC "0xfd AND IYh        " [0xfd, 0xA5                  ] (AND (ALUreg8 IYl))
    , TC "AND (IY+N)          " [0xFD, 0xA6, 0xde            ] (AND (ALUreg8 (IYindirect (negate 34))))
    , TC "0xfd AND A          " [0xfd, 0xA7                  ] (AND (ALUreg8 A))
    , TC "0xfd XOR B          " [0xfd, 0xA8                  ] (XOR (ALUreg8 B))
    , TC "0xfd XOR C          " [0xfd, 0xA9                  ] (XOR (ALUreg8 C))
    , TC "0xfd XOR D          " [0xfd, 0xAA                  ] (XOR (ALUreg8 D))
    , TC "0xfd XOR E          " [0xfd, 0xAB                  ] (XOR (ALUreg8 E))
    , TC "0xfd XOR IYh        " [0xfd, 0xAC                  ] (XOR (ALUreg8 IYh))
    , TC "0xfd XOR IYl        " [0xfd, 0xAD                  ] (XOR (ALUreg8 IYl))
    , TC "XOR (IY+N)          " [0xFD, 0xAE, 0x0f            ] (XOR (ALUreg8 (IYindirect 0x0f)))
    , TC "0xfd XOR A          " [0xfd, 0xAF                  ] (XOR (ALUreg8 A))
    , TC "0xfd OR B           " [0xfd, 0xB0                  ] (OR (ALUreg8 B))
    , TC "0xfd OR C           " [0xfd, 0xB1                  ] (OR (ALUreg8 C))
    , TC "0xfd OR D           " [0xfd, 0xB2                  ] (OR (ALUreg8 D))
    , TC "0xfd OR E           " [0xfd, 0xB3                  ] (OR (ALUreg8 E))
    , TC "0xfd OR IYh         " [0xfd, 0xB4                  ] (OR (ALUreg8 IYh))
    , TC "0xfd OR IYh         " [0xfd, 0xB5                  ] (OR (ALUreg8 IYl))
    , TC "OR (IY+N)           " [0xFD, 0xB6, 0x12            ] (OR (ALUreg8 (IYindirect 0x12)))
    , TC "0xfd OR A           " [0xfd, 0xB7                  ] (OR (ALUreg8 A))
    , TC "0xfd CP B           " [0xfd, 0xB8                  ] (CP (ALUreg8 B))
    , TC "0xfd CP C           " [0xfd, 0xB9                  ] (CP (ALUreg8 C))
    , TC "0xfd CP D           " [0xfd, 0xBA                  ] (CP (ALUreg8 D))
    , TC "0xfd CP E           " [0xfd, 0xBB                  ] (CP (ALUreg8 E))
    , TC "0xfd CP IYh         " [0xfd, 0xBC                  ] (CP (ALUreg8 IYh))
    , TC "0xfd CP IYl         " [0xfd, 0xBD                  ] (CP (ALUreg8 IYl))
    , TC "CP (IY+N)           " [0xFD, 0xBE, 0x34            ] (CP (ALUreg8 (IYindirect 0x34)))
    , TC "0xfd CP A           " [0xfd, 0xBF                  ] (CP (ALUreg8 A))
    , TC "0xfd RET NZ         " [0xfd, 0xC0                  ] (RETCC NZ)
    , TC "0xfd POP BC         " [0xfd, 0xC1                  ] (POP (AFPair16 BC))
    , TC "0xfd JP NZ,$+3      " [0xfd, 0xC2, 0x78, 0x56      ] (JPCC NZ (mkAbstractAddr 0x5678))
    , TC "0xfd JP $+3         " [0xfd, 0xC3, 0x34, 0x12      ] (JP (mkAbstractAddr 0x1234))
    , TC "0xfd CALL NZ,NN     " [0xfd, 0xC4, 0x56, 0x78      ] (CALLCC NZ (mkAbstractAddr 0x7856))
    , TC "0xfd PUSH BC        " [0xfd, 0xC5                  ] (PUSH (AFPair16 BC))
    , TC "0xfd ADD A,N        " [0xfd, 0xC6, 0x9a            ] (ADD (ALUimm 0x9a))
    , TC "0xfd RST 0          " [0xfd, 0xC7                  ] (RST 0)
    , TC "0xfd RET Z          " [0xfd, 0xC8                  ] (RETCC Z)
    , TC "0xfd RET            " [0xfd, 0xC9                  ] RET
    , TC "0xfd JP Z,$+3       " [0xfd, 0xCA, 0xbb, 0xaa      ] (JPCC Z (mkAbstractAddr 0xaabb))
    , TC "RLC (IY+d)->B       " [0xfd, 0xCB, 0x10, 0x00      ] (RLCidx (IYindirect 0x10) B)
    , TC "RLC (IY+d)->C       " [0xfd, 0xCB, 0x11, 0x01      ] (RLCidx (IYindirect 0x11) C)
    , TC "RLC (IY+d)->D       " [0xfd, 0xCB, 0x12, 0x02      ] (RLCidx (IYindirect 0x12) D)
    , TC "RLC (IY+d)->E       " [0xfd, 0xCB, 0x13, 0x03      ] (RLCidx (IYindirect 0x13) E)
    , TC "RLC (IY+d)->H       " [0xfd, 0xCB, 0x14, 0x04      ] (RLCidx (IYindirect 0x14) H)
    , TC "RLC (IY+d)->L       " [0xfd, 0xCB, 0x15, 0x05      ] (RLCidx (IYindirect 0x15) L)
    , TC "RLC (IY+d)          " [0xfd, 0xCB, 0x16, 0x06      ] (RLC (IYindirect 0x16))
    , TC "RLC (IY+d)->A       " [0xfd, 0xCB, 0x17, 0x07      ] (RLCidx (IYindirect 0x17) A)
    , TC "RRC (IY+d)->B       " [0xfd, 0xCB, 0x10, 0x08      ] (RRCidx (IYindirect 0x10) B)
    , TC "RRC (IY+d)->C       " [0xfd, 0xCB, 0x11, 0x09      ] (RRCidx (IYindirect 0x11) C)
    , TC "RRC (IY+d)->D       " [0xfd, 0xCB, 0x12, 0x0a      ] (RRCidx (IYindirect 0x12) D)
    , TC "RRC (IY+d)->E       " [0xfd, 0xCB, 0x13, 0x0b      ] (RRCidx (IYindirect 0x13) E)
    , TC "RRC (IY+d)->H       " [0xfd, 0xCB, 0x14, 0x0c      ] (RRCidx (IYindirect 0x14) H)
    , TC "RRC (IY+d)->L       " [0xfd, 0xCB, 0x15, 0x0d      ] (RRCidx (IYindirect 0x15) L)
    , TC "RRC (IY+d)          " [0xfd, 0xCB, 0x16, 0x0e      ] (RRC (IYindirect 0x16))
    , TC "RRC (IY+d)->A       " [0xfd, 0xCB, 0x17, 0x0f      ] (RRCidx (IYindirect 0x17) A)
    , TC "RL (IY+d)->B        " [0xfd, 0xCB, 0x10, 0x10      ] (RLidx (IYindirect 0x10) B)
    , TC "RL (IY+d)->C        " [0xfd, 0xCB, 0x11, 0x11      ] (RLidx (IYindirect 0x11) C)
    , TC "RL (IY+d)->D        " [0xfd, 0xCB, 0x12, 0x12      ] (RLidx (IYindirect 0x12) D)
    , TC "RL (IY+d)->E        " [0xfd, 0xCB, 0x13, 0x13      ] (RLidx (IYindirect 0x13) E)
    , TC "RL (IY+d)->H        " [0xfd, 0xCB, 0x14, 0x14      ] (RLidx (IYindirect 0x14) H)
    , TC "RL (IY+d)->L        " [0xfd, 0xCB, 0x15, 0x15      ] (RLidx (IYindirect 0x15) L)
    , TC "RL (IY+d)           " [0xfd, 0xCB, 0x16, 0x16      ] (RL (IYindirect 0x16))
    , TC "RL (IY+d)->A        " [0xfd, 0xCB, 0x17, 0x17      ] (RLidx (IYindirect 0x17) A)
    , TC "RR (IY+d)->B        " [0xfd, 0xCB, 0x10, 0x18      ] (RRidx (IYindirect 0x10) B)
    , TC "RR (IY+d)->C        " [0xfd, 0xCB, 0x11, 0x19      ] (RRidx (IYindirect 0x11) C)
    , TC "RR (IY+d)->D        " [0xfd, 0xCB, 0x12, 0x1a      ] (RRidx (IYindirect 0x12) D)
    , TC "RR (IY+d)->E        " [0xfd, 0xCB, 0x13, 0x1b      ] (RRidx (IYindirect 0x13) E)
    , TC "RR (IY+d)->H        " [0xfd, 0xCB, 0x14, 0x1c      ] (RRidx (IYindirect 0x14) H)
    , TC "RR (IY+d)->L        " [0xfd, 0xCB, 0x15, 0x1d      ] (RRidx (IYindirect 0x15) L)
    , TC "RR (IY+d)           " [0xfd, 0xCB, 0x16, 0x1e      ] (RR (IYindirect 0x16))
    , TC "RR (IY+d)->A        " [0xfd, 0xCB, 0x17, 0x1f      ] (RRidx (IYindirect 0x17) A)
    , TC "SLA (IY+d)->B       " [0xfd, 0xCB, 0x10, 0x20      ] (SLAidx (IYindirect 0x10) B)
    , TC "SLA (IY+d)->C       " [0xfd, 0xCB, 0x11, 0x21      ] (SLAidx (IYindirect 0x11) C)
    , TC "SLA (IY+d)->D       " [0xfd, 0xCB, 0x12, 0x22      ] (SLAidx (IYindirect 0x12) D)
    , TC "SLA (IY+d)->E       " [0xfd, 0xCB, 0x13, 0x23      ] (SLAidx (IYindirect 0x13) E)
    , TC "SLA (IY+d)->H       " [0xfd, 0xCB, 0x14, 0x24      ] (SLAidx (IYindirect 0x14) H)
    , TC "SLA (IY+d)->L       " [0xfd, 0xCB, 0x15, 0x25      ] (SLAidx (IYindirect 0x15) L)
    , TC "SLA (IY+d)          " [0xfd, 0xCB, 0x16, 0x26      ] (SLA (IYindirect 0x16))
    , TC "SLA (IY+d)->A       " [0xfd, 0xCB, 0x17, 0x27      ] (SLAidx (IYindirect 0x17) A)
    , TC "SRA (IY+d)->B       " [0xfd, 0xCB, 0x10, 0x28      ] (SRAidx (IYindirect 0x10) B)
    , TC "SRA (IY+d)->C       " [0xfd, 0xCB, 0x11, 0x29      ] (SRAidx (IYindirect 0x11) C)
    , TC "SRA (IY+d)->D       " [0xfd, 0xCB, 0x12, 0x2a      ] (SRAidx (IYindirect 0x12) D)
    , TC "SRA (IY+d)->E       " [0xfd, 0xCB, 0x13, 0x2b      ] (SRAidx (IYindirect 0x13) E)
    , TC "SRA (IY+d)->H       " [0xfd, 0xCB, 0x14, 0x2c      ] (SRAidx (IYindirect 0x14) H)
    , TC "SRA (IY+d)->L       " [0xfd, 0xCB, 0x15, 0x2d      ] (SRAidx (IYindirect 0x15) L)
    , TC "SRA (IY+d)          " [0xfd, 0xCB, 0x16, 0x2e      ] (SRA (IYindirect 0x16))
    , TC "SRA (IY+d)->A       " [0xfd, 0xCB, 0x17, 0x2f      ] (SRAidx (IYindirect 0x17) A)
    , TC "SLL (IY+d)->B       " [0xfd, 0xCB, 0x10, 0x30      ] (SLLidx (IYindirect 0x10) B)
    , TC "SLL (IY+d)->C       " [0xfd, 0xCB, 0x11, 0x31      ] (SLLidx (IYindirect 0x11) C)
    , TC "SLL (IY+d)->D       " [0xfd, 0xCB, 0x12, 0x32      ] (SLLidx (IYindirect 0x12) D)
    , TC "SLL (IY+d)->E       " [0xfd, 0xCB, 0x13, 0x33      ] (SLLidx (IYindirect 0x13) E)
    , TC "SLL (IY+d)->H       " [0xfd, 0xCB, 0x14, 0x34      ] (SLLidx (IYindirect 0x14) H)
    , TC "SLL (IY+d)->L       " [0xfd, 0xCB, 0x15, 0x35      ] (SLLidx (IYindirect 0x15) L)
    , TC "SLL (IY+d)          " [0xfd, 0xCB, 0x16, 0x36      ] (SLL (IYindirect 0x16))
    , TC "SLL (IY+d)->A       " [0xfd, 0xCB, 0x17, 0x37      ] (SLLidx (IYindirect 0x17) A)
    , TC "SRL (IY+d)->B       " [0xfd, 0xCB, 0x10, 0x38      ] (SRLidx (IYindirect 0x10) B)
    , TC "SRL (IY+d)->C       " [0xfd, 0xCB, 0x11, 0x39      ] (SRLidx (IYindirect 0x11) C)
    , TC "SRL (IY+d)->D       " [0xfd, 0xCB, 0x12, 0x3a      ] (SRLidx (IYindirect 0x12) D)
    , TC "SRL (IY+d)->E       " [0xfd, 0xCB, 0x13, 0x3b      ] (SRLidx (IYindirect 0x13) E)
    , TC "SRL (IY+d)->H       " [0xfd, 0xCB, 0x14, 0x3c      ] (SRLidx (IYindirect 0x14) H)
    , TC "SRL (IY+d)->L       " [0xfd, 0xCB, 0x15, 0x3d      ] (SRLidx (IYindirect 0x15) L)
    , TC "SRL (IY+d)          " [0xfd, 0xCB, 0x16, 0x3e      ] (SRL (IYindirect 0x16))
    , TC "SRL (IY+d)->A       " [0xfd, 0xCB, 0x17, 0x3f      ] (SRLidx (IYindirect 0x17) A)
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x20, 0x40      ] (BIT 0 (IYindirect 0x20))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x21, 0x41      ] (BIT 0 (IYindirect 0x21))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x22, 0x42      ] (BIT 0 (IYindirect 0x22))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x23, 0x43      ] (BIT 0 (IYindirect 0x23))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x24, 0x44      ] (BIT 0 (IYindirect 0x24))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x25, 0x45      ] (BIT 0 (IYindirect 0x25))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x26, 0x46      ] (BIT 0 (IYindirect 0x26))
    , TC "BIT 0,(IY+d)        " [0xfd, 0xCB, 0x27, 0x47      ] (BIT 0 (IYindirect 0x27))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x28, 0x48      ] (BIT 1 (IYindirect 0x28))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x29, 0x49      ] (BIT 1 (IYindirect 0x29))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x2a, 0x4a      ] (BIT 1 (IYindirect 0x2a))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x2b, 0x4b      ] (BIT 1 (IYindirect 0x2b))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x2c, 0x4c      ] (BIT 1 (IYindirect 0x2c))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x2d, 0x4d      ] (BIT 1 (IYindirect 0x2d))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x2e, 0x4e      ] (BIT 1 (IYindirect 0x2e))
    , TC "BIT 1,(IY+d)        " [0xfd, 0xCB, 0x2f, 0x4f      ] (BIT 1 (IYindirect 0x2f))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x20, 0x50      ] (BIT 2 (IYindirect 0x20))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x21, 0x51      ] (BIT 2 (IYindirect 0x21))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x22, 0x52      ] (BIT 2 (IYindirect 0x22))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x23, 0x53      ] (BIT 2 (IYindirect 0x23))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x24, 0x54      ] (BIT 2 (IYindirect 0x24))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x25, 0x55      ] (BIT 2 (IYindirect 0x25))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x26, 0x56      ] (BIT 2 (IYindirect 0x26))
    , TC "BIT 2,(IY+d)        " [0xfd, 0xCB, 0x27, 0x57      ] (BIT 2 (IYindirect 0x27))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x28, 0x58      ] (BIT 3 (IYindirect 0x28))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x29, 0x59      ] (BIT 3 (IYindirect 0x29))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x2a, 0x5a      ] (BIT 3 (IYindirect 0x2a))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x2b, 0x5b      ] (BIT 3 (IYindirect 0x2b))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x2c, 0x5c      ] (BIT 3 (IYindirect 0x2c))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x2d, 0x5d      ] (BIT 3 (IYindirect 0x2d))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x2e, 0x5e      ] (BIT 3 (IYindirect 0x2e))
    , TC "BIT 3,(IY+d)        " [0xfd, 0xCB, 0x2f, 0x5f      ] (BIT 3 (IYindirect 0x2f))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x20, 0x60      ] (BIT 4 (IYindirect 0x20))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x21, 0x61      ] (BIT 4 (IYindirect 0x21))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x22, 0x62      ] (BIT 4 (IYindirect 0x22))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x23, 0x63      ] (BIT 4 (IYindirect 0x23))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x24, 0x64      ] (BIT 4 (IYindirect 0x24))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x25, 0x65      ] (BIT 4 (IYindirect 0x25))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x26, 0x66      ] (BIT 4 (IYindirect 0x26))
    , TC "BIT 4,(IY+d)        " [0xfd, 0xCB, 0x27, 0x67      ] (BIT 4 (IYindirect 0x27))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x28, 0x68      ] (BIT 5 (IYindirect 0x28))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x29, 0x69      ] (BIT 5 (IYindirect 0x29))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x2a, 0x6a      ] (BIT 5 (IYindirect 0x2a))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x2b, 0x6b      ] (BIT 5 (IYindirect 0x2b))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x2c, 0x6c      ] (BIT 5 (IYindirect 0x2c))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x2d, 0x6d      ] (BIT 5 (IYindirect 0x2d))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x2e, 0x6e      ] (BIT 5 (IYindirect 0x2e))
    , TC "BIT 5,(IY+d)        " [0xfd, 0xCB, 0x2f, 0x6f      ] (BIT 5 (IYindirect 0x2f))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x20, 0x70      ] (BIT 6 (IYindirect 0x20))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x21, 0x71      ] (BIT 6 (IYindirect 0x21))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x22, 0x72      ] (BIT 6 (IYindirect 0x22))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x23, 0x73      ] (BIT 6 (IYindirect 0x23))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x24, 0x74      ] (BIT 6 (IYindirect 0x24))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x25, 0x75      ] (BIT 6 (IYindirect 0x25))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x26, 0x76      ] (BIT 6 (IYindirect 0x26))
    , TC "BIT 6,(IY+d)        " [0xfd, 0xCB, 0x27, 0x77      ] (BIT 6 (IYindirect 0x27))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x28, 0x78      ] (BIT 7 (IYindirect 0x28))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x29, 0x79      ] (BIT 7 (IYindirect 0x29))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x2a, 0x7a      ] (BIT 7 (IYindirect 0x2a))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x2b, 0x7b      ] (BIT 7 (IYindirect 0x2b))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x2c, 0x7c      ] (BIT 7 (IYindirect 0x2c))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x2d, 0x7d      ] (BIT 7 (IYindirect 0x2d))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x2e, 0x7e      ] (BIT 7 (IYindirect 0x2e))
    , TC "BIT 7,(IY+d)        " [0xfd, 0xCB, 0x2f, 0x7f      ] (BIT 7 (IYindirect 0x2f))
    , TC "RES 0,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0x80      ] (RESidx 0 (IYindirect 0x10) B)
    , TC "RES 0,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0x81      ] (RESidx 0 (IYindirect 0x11) C)
    , TC "RES 0,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0x82      ] (RESidx 0 (IYindirect 0x12) D)
    , TC "RES 0,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0x83      ] (RESidx 0 (IYindirect 0x13) E)
    , TC "RES 0,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0x84      ] (RESidx 0 (IYindirect 0x14) H)
    , TC "RES 0,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0x85      ] (RESidx 0 (IYindirect 0x15) L)
    , TC "RES 0,(IY+d)        " [0xfd, 0xCB, 0x16, 0x86      ] (RES 0 (IYindirect 0x16))
    , TC "RES 0,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0x87      ] (RESidx 0 (IYindirect 0x17) A)
    , TC "RES 1,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0x88      ] (RESidx 1 (IYindirect 0x10) B)
    , TC "RES 1,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0x89      ] (RESidx 1 (IYindirect 0x11) C)
    , TC "RES 1,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0x8a      ] (RESidx 1 (IYindirect 0x12) D)
    , TC "RES 1,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0x8b      ] (RESidx 1 (IYindirect 0x13) E)
    , TC "RES 1,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0x8c      ] (RESidx 1 (IYindirect 0x14) H)
    , TC "RES 1,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0x8d      ] (RESidx 1 (IYindirect 0x15) L)
    , TC "RES 1,(IY+d)        " [0xfd, 0xCB, 0x16, 0x8e      ] (RES 1 (IYindirect 0x16))
    , TC "RES 1,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0x8f      ] (RESidx 1 (IYindirect 0x17) A)
    , TC "RES 2,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0x90      ] (RESidx 2 (IYindirect 0x10) B)
    , TC "RES 2,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0x91      ] (RESidx 2 (IYindirect 0x11) C)
    , TC "RES 2,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0x92      ] (RESidx 2 (IYindirect 0x12) D)
    , TC "RES 2,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0x93      ] (RESidx 2 (IYindirect 0x13) E)
    , TC "RES 2,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0x94      ] (RESidx 2 (IYindirect 0x14) H)
    , TC "RES 2,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0x95      ] (RESidx 2 (IYindirect 0x15) L)
    , TC "RES 2,(IY+d)        " [0xfd, 0xCB, 0x16, 0x96      ] (RES 2 (IYindirect 0x16))
    , TC "RES 2,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0x97      ] (RESidx 2 (IYindirect 0x17) A)
    , TC "RES 3,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0x98      ] (RESidx 3 (IYindirect 0x10) B)
    , TC "RES 3,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0x99      ] (RESidx 3 (IYindirect 0x11) C)
    , TC "RES 3,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0x9a      ] (RESidx 3 (IYindirect 0x12) D)
    , TC "RES 3,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0x9b      ] (RESidx 3 (IYindirect 0x13) E)
    , TC "RES 3,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0x9c      ] (RESidx 3 (IYindirect 0x14) H)
    , TC "RES 3,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0x9d      ] (RESidx 3 (IYindirect 0x15) L)
    , TC "RES 3,(IY+d)        " [0xfd, 0xCB, 0x16, 0x9e      ] (RES 3 (IYindirect 0x16))
    , TC "RES 3,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0x9f      ] (RESidx 3 (IYindirect 0x17) A)
    , TC "RES 4,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xa0      ] (RESidx 4 (IYindirect 0x10) B)
    , TC "RES 4,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xa1      ] (RESidx 4 (IYindirect 0x11) C)
    , TC "RES 4,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xa2      ] (RESidx 4 (IYindirect 0x12) D)
    , TC "RES 4,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xa3      ] (RESidx 4 (IYindirect 0x13) E)
    , TC "RES 4,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xa4      ] (RESidx 4 (IYindirect 0x14) H)
    , TC "RES 4,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xa5      ] (RESidx 4 (IYindirect 0x15) L)
    , TC "RES 4,(IY+d)        " [0xfd, 0xCB, 0x16, 0xa6      ] (RES 4 (IYindirect 0x16))
    , TC "RES 4,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xa7      ] (RESidx 4 (IYindirect 0x17) A)
    , TC "RES 5,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xa8      ] (RESidx 5 (IYindirect 0x10) B)
    , TC "RES 5,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xa9      ] (RESidx 5 (IYindirect 0x11) C)
    , TC "RES 5,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xaa      ] (RESidx 5 (IYindirect 0x12) D)
    , TC "RES 5,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xab      ] (RESidx 5 (IYindirect 0x13) E)
    , TC "RES 5,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xac      ] (RESidx 5 (IYindirect 0x14) H)
    , TC "RES 5,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xad      ] (RESidx 5 (IYindirect 0x15) L)
    , TC "RES 5,(IY+d)        " [0xfd, 0xCB, 0x16, 0xae      ] (RES 5 (IYindirect 0x16))
    , TC "RES 5,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xaf      ] (RESidx 5 (IYindirect 0x17) A)
    , TC "RES 6,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xb0      ] (RESidx 6 (IYindirect 0x10) B)
    , TC "RES 6,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xb1      ] (RESidx 6 (IYindirect 0x11) C)
    , TC "RES 6,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xb2      ] (RESidx 6 (IYindirect 0x12) D)
    , TC "RES 6,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xb3      ] (RESidx 6 (IYindirect 0x13) E)
    , TC "RES 6,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xb4      ] (RESidx 6 (IYindirect 0x14) H)
    , TC "RES 6,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xb5      ] (RESidx 6 (IYindirect 0x15) L)
    , TC "RES 6,(IY+d)        " [0xfd, 0xCB, 0x16, 0xb6      ] (RES 6 (IYindirect 0x16))
    , TC "RES 6,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xb7      ] (RESidx 6 (IYindirect 0x17) A)
    , TC "RES 7,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xb8      ] (RESidx 7 (IYindirect 0x10) B)
    , TC "RES 7,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xb9      ] (RESidx 7 (IYindirect 0x11) C)
    , TC "RES 7,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xba      ] (RESidx 7 (IYindirect 0x12) D)
    , TC "RES 7,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xbb      ] (RESidx 7 (IYindirect 0x13) E)
    , TC "RES 7,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xbc      ] (RESidx 7 (IYindirect 0x14) H)
    , TC "RES 7,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xbd      ] (RESidx 7 (IYindirect 0x15) L)
    , TC "RES 7,(IY+d)        " [0xfd, 0xCB, 0x16, 0xbe      ] (RES 7 (IYindirect 0x16))
    , TC "RES 7,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xbf      ] (RESidx 7 (IYindirect 0x17) A)
    , TC "SET 0,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xc0      ] (SETidx 0 (IYindirect 0x10) B)
    , TC "SET 0,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xc1      ] (SETidx 0 (IYindirect 0x11) C)
    , TC "SET 0,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xc2      ] (SETidx 0 (IYindirect 0x12) D)
    , TC "SET 0,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xc3      ] (SETidx 0 (IYindirect 0x13) E)
    , TC "SET 0,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xc4      ] (SETidx 0 (IYindirect 0x14) H)
    , TC "SET 0,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xc5      ] (SETidx 0 (IYindirect 0x15) L)
    , TC "SET 0,(IY+d)        " [0xfd, 0xCB, 0x16, 0xc6      ] (SET 0 (IYindirect 0x16))
    , TC "SET 0,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xc7      ] (SETidx 0 (IYindirect 0x17) A)
    , TC "SET 1,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xc8      ] (SETidx 1 (IYindirect 0x10) B)
    , TC "SET 1,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xc9      ] (SETidx 1 (IYindirect 0x11) C)
    , TC "SET 1,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xca      ] (SETidx 1 (IYindirect 0x12) D)
    , TC "SET 1,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xcb      ] (SETidx 1 (IYindirect 0x13) E)
    , TC "SET 1,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xcc      ] (SETidx 1 (IYindirect 0x14) H)
    , TC "SET 1,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xcd      ] (SETidx 1 (IYindirect 0x15) L)
    , TC "SET 1,(IY+d)        " [0xfd, 0xCB, 0x16, 0xce      ] (SET 1 (IYindirect 0x16))
    , TC "SET 1,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xcf      ] (SETidx 1 (IYindirect 0x17) A)
    , TC "SET 2,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xd0      ] (SETidx 2 (IYindirect 0x10) B)
    , TC "SET 2,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xd1      ] (SETidx 2 (IYindirect 0x11) C)
    , TC "SET 2,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xd2      ] (SETidx 2 (IYindirect 0x12) D)
    , TC "SET 2,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xd3      ] (SETidx 2 (IYindirect 0x13) E)
    , TC "SET 2,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xd4      ] (SETidx 2 (IYindirect 0x14) H)
    , TC "SET 2,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xd5      ] (SETidx 2 (IYindirect 0x15) L)
    , TC "SET 2,(IY+d)        " [0xfd, 0xCB, 0x16, 0xd6      ] (SET 2 (IYindirect 0x16))
    , TC "SET 2,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xd7      ] (SETidx 2 (IYindirect 0x17) A)
    , TC "SET 3,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xd8      ] (SETidx 3 (IYindirect 0x10) B)
    , TC "SET 3,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xd9      ] (SETidx 3 (IYindirect 0x11) C)
    , TC "SET 3,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xda      ] (SETidx 3 (IYindirect 0x12) D)
    , TC "SET 3,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xdb      ] (SETidx 3 (IYindirect 0x13) E)
    , TC "SET 3,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xdc      ] (SETidx 3 (IYindirect 0x14) H)
    , TC "SET 3,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xdd      ] (SETidx 3 (IYindirect 0x15) L)
    , TC "SET 3,(IY+d)        " [0xfd, 0xCB, 0x16, 0xde      ] (SET 3 (IYindirect 0x16))
    , TC "SET 3,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xdf      ] (SETidx 3 (IYindirect 0x17) A)
    , TC "SET 4,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xe0      ] (SETidx 4 (IYindirect 0x10) B)
    , TC "SET 4,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xe1      ] (SETidx 4 (IYindirect 0x11) C)
    , TC "SET 4,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xe2      ] (SETidx 4 (IYindirect 0x12) D)
    , TC "SET 4,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xe3      ] (SETidx 4 (IYindirect 0x13) E)
    , TC "SET 4,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xe4      ] (SETidx 4 (IYindirect 0x14) H)
    , TC "SET 4,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xe5      ] (SETidx 4 (IYindirect 0x15) L)
    , TC "SET 4,(IY+d)        " [0xfd, 0xCB, 0x16, 0xe6      ] (SET 4 (IYindirect 0x16))
    , TC "SET 4,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xe7      ] (SETidx 4 (IYindirect 0x17) A)
    , TC "SET 5,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xe8      ] (SETidx 5 (IYindirect 0x10) B)
    , TC "SET 5,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xe9      ] (SETidx 5 (IYindirect 0x11) C)
    , TC "SET 5,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xea      ] (SETidx 5 (IYindirect 0x12) D)
    , TC "SET 5,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xeb      ] (SETidx 5 (IYindirect 0x13) E)
    , TC "SET 5,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xec      ] (SETidx 5 (IYindirect 0x14) H)
    , TC "SET 5,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xed      ] (SETidx 5 (IYindirect 0x15) L)
    , TC "SET 5,(IY+d)        " [0xfd, 0xCB, 0x16, 0xee      ] (SET 5 (IYindirect 0x16))
    , TC "SET 5,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xef      ] (SETidx 5 (IYindirect 0x17) A)
    , TC "SET 6,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xf0      ] (SETidx 6 (IYindirect 0x10) B)
    , TC "SET 6,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xf1      ] (SETidx 6 (IYindirect 0x11) C)
    , TC "SET 6,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xf2      ] (SETidx 6 (IYindirect 0x12) D)
    , TC "SET 6,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xf3      ] (SETidx 6 (IYindirect 0x13) E)
    , TC "SET 6,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xf4      ] (SETidx 6 (IYindirect 0x14) H)
    , TC "SET 6,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xf5      ] (SETidx 6 (IYindirect 0x15) L)
    , TC "SET 6,(IY+d)        " [0xfd, 0xCB, 0x16, 0xf6      ] (SET 6 (IYindirect 0x16))
    , TC "SET 6,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xf7      ] (SETidx 6 (IYindirect 0x17) A)
    , TC "SET 7,(IY+d)->B     " [0xfd, 0xCB, 0x10, 0xf8      ] (SETidx 7 (IYindirect 0x10) B)
    , TC "SET 7,(IY+d)->C     " [0xfd, 0xCB, 0x11, 0xf9      ] (SETidx 7 (IYindirect 0x11) C)
    , TC "SET 7,(IY+d)->D     " [0xfd, 0xCB, 0x12, 0xfa      ] (SETidx 7 (IYindirect 0x12) D)
    , TC "SET 7,(IY+d)->E     " [0xfd, 0xCB, 0x13, 0xfb      ] (SETidx 7 (IYindirect 0x13) E)
    , TC "SET 7,(IY+d)->H     " [0xfd, 0xCB, 0x14, 0xfc      ] (SETidx 7 (IYindirect 0x14) H)
    , TC "SET 7,(IY+d)->L     " [0xfd, 0xCB, 0x15, 0xfd      ] (SETidx 7 (IYindirect 0x15) L)
    , TC "SET 7,(IY+d)        " [0xfd, 0xCB, 0x16, 0xfe      ] (SET 7 (IYindirect 0x16))
    , TC "SET 7,(IY+d)->A     " [0xfd, 0xCB, 0x17, 0xff      ] (SETidx 7 (IYindirect 0x17) A)
    , TC "0xfd CALL Z,NN      " [0xfd, 0xCC, 0x56, 0x78      ] (CALLCC Z (mkAbstractAddr 0x7856))
    , TC "0xfd CALL NN        " [0xfd, 0xCD, 0x9a, 0xbc      ] (CALL (mkAbstractAddr 0xbc9a))
    , TC "0xfd ADC A,N        " [0xfd, 0xCE, 0xde            ] (ADC (ALUimm 0xde))
    , TC "0xfd RST 8H         " [0xfd, 0xCF                  ] (RST 8)
    , TC "0xfd RET NC         " [0xfd, 0xD0                  ] (RETCC NC)
    , TC "0xfd POP DE         " [0xfd, 0xD1                  ] (POP (AFPair16 DE))
    , TC "0xfd JP NC,$+3      " [0xfd, 0xD2, 0xfd, 0xcc      ] (JPCC NC  (mkAbstractAddr 0xccfd))
    , TC "0xfd OUT (N),A      " [0xfd, 0xD3, 0x0f            ] (OUT (PortImm 0x0f))
    , TC "0xfd CALL NC,NN     " [0xfd, 0xD4, 0x12, 0x34      ] (CALLCC NC (mkAbstractAddr 0x3412))
    , TC "0xfd PUSH DE        " [0xfd, 0xD5                  ] (PUSH (AFPair16 DE))
    , TC "0xfd SUB N          " [0xfd, 0xD6, 0x9a            ] (SUB (ALUimm 0x9a))
    , TC "0xfd RST 10H        " [0xfd, 0xD7                  ] (RST 0x10)
    , TC "0xfd RET C          " [0xfd, 0xD8                  ] (RETCC CY)
    , TC "0xfd EXX            " [0xfd, 0xD9                  ] (EXC Primes)
    , TC "0xfd JP C,$+3       " [0xfd, 0xDA, 0x54, 0xa4      ] (JPCC CY (mkAbstractAddr 0xa454))
    , TC "0xfd IN A,(N)       " [0xfd, 0xDB, 0xbc            ] (IN (PortImm 0xbc))
    , TC "0xfd CALL C,NN      " [0xfd, 0xDC, 0xde, 0x0f      ] (CALLCC CY (mkAbstractAddr 0x0fde))
    , TC "0xfd SBC A,N        " [0xfd, 0xDE, 0x56            ] (SBC (ALUimm 0x56))
    , TC "0xfd RST 18H        " [0xfd, 0xDF                  ] (RST 0x18)
    , TC "0xfd RET PO         " [0xfd, 0xE0                  ] (RETCC PO)
    , TC "POP IY              " [0xFD, 0xE1                  ] (POP (AFPair16 IY))
    , TC "0xfd JP PO,$+3      " [0xfd, 0xE2, 0x03, 0x61      ] (JPCC PO (mkAbstractAddr 0x6103))
    , TC "EX (SP),IY          " [0xFD, 0xE3                  ] (EXC SPIY)
    , TC "0xfd CALL PO,NN     " [0xfd, 0xE4, 0x78, 0x9a      ] (CALLCC PO (mkAbstractAddr 0x9a78))
    , TC "PUSH IY             " [0xFD, 0xE5                  ] (PUSH (AFPair16 IY))
    , TC "0xfd AND N          " [0xfd, 0xE6, 0xbc            ] (AND (ALUimm 0xbc))
    , TC "0xfd RST 20H        " [0xfd, 0xE7                  ] (RST 0x20)
    , TC "0xfd RET PE         " [0xfd, 0xE8                  ] (RETCC PE)
    , TC "JP (IY)             " [0xFD, 0xE9                  ] JPIY
    , TC "0xfd JP PE,$+3      " [0xfd, 0xEA, 0x35, 0x9f      ] (JPCC PE (mkAbstractAddr 0x9f35))
    , TC "0xfd EX DE,HL       " [0xfd, 0xEB                  ] (EXC DEHL)
    , TC "0xfd CALL PE,NN     " [0xfd, 0xEC, 0xde, 0x0f      ] (CALLCC PE (mkAbstractAddr 0x0fde))
    , TC "0xfd XOR N          " [0xfd, 0xEE, 0x12            ] (XOR (ALUimm 0x12))
    , TC "0xfd RST 28H        " [0xfd, 0xEF                  ] (RST 0x28)
    , TC "0xfd RET P          " [0xfd, 0xF0                  ] (RETCC POS)
    , TC "0xfd POP AF         " [0xfd, 0xF1                  ] (POP AF)
    , TC "0xfd JP P,$+3       " [0xfd, 0xF2, 0xcd, 0xab      ] (JPCC POS (mkAbstractAddr 0xabcd))
    , TC "0xfd DI             " [0xfd, 0xF3                  ] DI
    , TC "0xfd CALL P,NN      " [0xfd, 0xF4, 0x34, 0x56      ] (CALLCC POS (mkAbstractAddr 0x5634))
    , TC "0xfd PUSH AF        " [0xfd, 0xF5                  ] (PUSH AF)
    , TC "0xfd OR N           " [0xfd, 0xF6, 0x78            ] (OR (ALUimm 0x78))
    , TC "0xfd RST 30H        " [0xfd, 0xF7                  ] (RST 0x30)
    , TC "0xfd RET M          " [0xfd, 0xF8                  ] (RETCC MI)
    , TC "LD SP,IY            " [0xFD, 0xF9                  ] LDSPIY
    , TC "0xfd JP M,$+3       " [0xfd, 0xFA, 0x44, 0x99      ] (JPCC MI (mkAbstractAddr 0x9944))
    , TC "0xfd EI             " [0xfd, 0xFB                  ] EI
    , TC "0xfd CALL M,NN      " [0xfd, 0xFC, 0x9a, 0xbc      ] (CALLCC MI (mkAbstractAddr 0xbc9a))
    , TC "0xfd CP N           " [0xfd, 0xFE, 0xde            ] (CP (ALUimm 0xde))
    , TC "0xfd RST 38H        " [0xfd, 0xFF                  ] (RST 0x38)
    ]
  ]

