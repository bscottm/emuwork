-- | Various and sundry functions related to error handling
module Reader.ErrorHandling where

import System.IO
import Data.Word
import qualified Data.Vector.Unboxed as DVU

-- | An invalid raw vector, generated by the exception handlers
invalidVector :: IO (DVU.Vector Word8)
invalidVector = return DVU.empty

-- | Generic I/O exception handler. This outputs a message to 'stderr' of the form
--
-- @whence: exception@
genericIOErrors :: String                       -- ^ An indication of where the error ocurred
                -> IOError                      -- ^ The IO exception
                -> IO (DVU.Vector Word8)        -- ^ Result is always 'invalidVector'
genericIOErrors whence exc =
  hPutStrLn stderr (whence ++ ": " ++ (show exc))
  >> invalidVector
